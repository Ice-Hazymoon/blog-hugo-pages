[{"content":" 这次抛弃了wordpress，选用了 Hugo 来开发，时隔几年又上了全静态博客\n 本来想换成 Ghost 的，但是 Ghost 简直不把用户当人，主题开发的体验跟屎一样，都 2021 年了，连基本的搜索功能都没有，hbs 语法限制还多，还不能自己扩展 hbs 功能（更新后会重置），下线了原本有的插件系统。如果你想使用 Ghost，建议先看看这篇文章：为什么我不再喜欢 Ghost 作者说出了我用 Ghost 的真实感受，其实早在 17 年的时候我就尝试从 Wordpress 更换为 Ghost，最后由于 Ghost 限制太多，最终还是换回了 Wordpress。4年过去了，没想到 Ghost 还是这个死样子。\n主题对比 选来选取，最终决定了 Hexo 和 Hugo，说下两者的优缺点：\nHugo 优点：\n 世界最快，几千篇文章1秒不到即可生成 开发友好，模板自带很多常用函数，还支持图片处理，保存后可以实时预览 开发模式什么样，线上模式就什么样，不像某些静态平台，开发的时候好好的，一上线就各种报错，说的就是你 Ghost 有一个非常棒的社区，基本所有问题你都能在这里找到答案 https://discourse.gohugo.io/ 支持很多的短代码  缺点：\n 模板少，虽然官网提供了 300 多个模板，但仍没有 Hexo 数量多，也不是很好看 不支持插件系统，这点让开发人员很头大，很多事情都得靠 JS 或者自己写脚本处理  Hexo 优点：\n 生态强大，主题多，虽然很多时候打开一篇博客文章看到的都是 Next 主题 支持插件系统，除了速度就没有解决不了的事 JS 开发，省点头发  缺点：\n 速度相对于 Hugo 就慢了很多 没有自带的图片处理函数，且自带的模板函数没有 Hugo 多  相比下来，由于我比较追求生成速度和开箱即用，所以选择了 Hugo，Hugo 除了不支持插件，毫不逊色 Hexo，所有内置函数不支持的东西写个 JS 脚本处理一下就行了。\n从 Vue 主题迁移到 Hugo 废了不少头发，花了 4 天的时间才全部迁移完成，但是其中的快感也是之前用 WP+Vue 体验不到的\n关于主题 从之前的 SSR 渲染变成现在的全站纯静态，访问速度+++\n支持搜索功能 把所有的内容都存到了 json 里面，然后使用 flexsearch 建立 key 来进行快速搜索\n 搜索预览 \n良好的 SEO 优化 虽然对于个人博客来说 SEO 可能没那么的重要，但还是写一下比较好，head 部分把常用的 SEO 相关内容都写进去了，未来会支持 PWA 和 AMP\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54  \u0026lt;meta charset=utf-8\u0026gt; \u0026lt;title\u0026gt;JS 西班牙语语音合成在 MacOS 上没有声音的问题\u0026lt;/title\u0026gt; \u0026lt;meta name=viewport content=\u0026#34;width=device-width,initial-scale=1\u0026#34;\u0026gt; \u0026lt;meta name=keywords content=\u0026#34;Ice-Hazymoon,冰凌胧月,Hazymoon,MikuTools,\u0026#34;\u0026gt; \u0026lt;meta name=description content=\u0026#34;在上篇文章中提到的 写了个西班牙语学习工具 中，最近在 Mac 上使用时发现语音合成一直没有声音，研究了半天才找到解决方法。 在系统设置中打开【辅助功能】\u0026#34;\u0026gt; \u0026lt;meta itemprop=description content=\u0026#34;在上篇文章中提到的 写了个西班牙语学习工具 中，最近在 Mac 上使用时发现语音合成一直没有声音，研究了半天才找到解决方法。 在系统设置中打开【辅助功能】\u0026#34;\u0026gt; \u0026lt;meta http-equiv=x-ua-compatible content=\u0026#34;ie=edge\u0026#34;\u0026gt; \u0026lt;meta itemprop=name content=\u0026#34;JS 西班牙语语音合成在 MacOS 上没有声音的问题\u0026#34;\u0026gt; \u0026lt;link href=https://imiku.me/index.xml title=\u0026#34;JS 西班牙语语音合成在 MacOS 上没有声音的问题\u0026#34; type=application/rss+xml rel=alternate\u0026gt; \u0026lt;link rel=stylesheet href=\u0026#34;https://cdn.jsdelivr.net/gh/Ice-Hazymoon/blog-hugo-pages@latest/main.css?v=1630320278\u0026#34;\u0026gt; \u0026lt;meta property=\u0026#34;og:site_name\u0026#34; content=\u0026#34;JS 西班牙语语音合成在 MacOS 上没有声音的问题\u0026#34;\u0026gt; \u0026lt;meta property=\u0026#34;og:type\u0026#34; content=\u0026#34;article\u0026#34;\u0026gt; \u0026lt;meta property=\u0026#34;og:title\u0026#34; content=\u0026#34;JS 西班牙语语音合成在 MacOS 上没有声音的问题\u0026#34;\u0026gt; \u0026lt;meta property=\u0026#34;og:description\u0026#34; content=\u0026#34;在上篇文章中提到的 写了个西班牙语学习工具 中，最近在 Mac 上使用时发现语音合成一直没有声音，研究了半天才找到解决方法。 在系统设置中打开【辅助功能】\u0026#34;\u0026gt; \u0026lt;meta property=\u0026#34;og:url\u0026#34; content=\u0026#34;https://imiku.me/2021/07/31/1459.html/\u0026#34;\u0026gt; \u0026lt;meta property=\u0026#34;og:image\u0026#34; content=\u0026#34;https://imiku.me/2021/07/31/1459.html/1630060151397491.jpg\u0026#34;\u0026gt; \u0026lt;meta property=\u0026#34;article:publisher\u0026#34; content=\u0026#34;https://imiku.me/2021/07/31/1459.html/\u0026#34;\u0026gt; \u0026lt;meta name=twitter:card content=\u0026#34;summary_large_image\u0026#34;\u0026gt; \u0026lt;meta name=twitter:title content=\u0026#34;JS 西班牙语语音合成在 MacOS 上没有声音的问题\u0026#34;\u0026gt; \u0026lt;meta name=twitter:description content=\u0026#34;在上篇文章中提到的 写了个西班牙语学习工具 中，最近在 Mac 上使用时发现语音合成一直没有声音，研究了半天才找到解决方法。 在系统设置中打开【辅助功能】\u0026#34;\u0026gt; \u0026lt;meta name=twitter:url content=\u0026#34;https://imiku.me/2021/07/31/1459.html/\u0026#34;\u0026gt; \u0026lt;meta name=twitter:image content=\u0026#34;https://imiku.me/2021/07/31/1459.html/1630060151397491.jpg\u0026#34;\u0026gt; \u0026lt;meta name=twitter:site content=\u0026#34;@Ice-Hazymoon\u0026#34;\u0026gt; \u0026lt;meta property=\u0026#34;og:image:width\u0026#34; content=\u0026#34;1920\u0026#34;\u0026gt; \u0026lt;meta property=\u0026#34;og:image:height\u0026#34; content=\u0026#34;1280\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;shortcut icon\u0026#34; href=/favicon.ico type=image/x-icon\u0026gt; \u0026lt;script type=application/ld+json\u0026gt; { \u0026#34;@context\u0026#34;: \u0026#34;http://schema.org\u0026#34;, \u0026#34;@type\u0026#34;: \u0026#34;BlogPosting\u0026#34;, \u0026#34;headline\u0026#34;: \u0026#34;JS 西班牙语语音合成在 MacOS上没有声音的问题\u0026#34;, \u0026#34;mainEntityOfPage\u0026#34;: { \u0026#34;@type\u0026#34;: \u0026#34;WebPage\u0026#34;, \u0026#34;@id\u0026#34;: \u0026#34;https:\\/\\/imiku.me\\/2021\\/07\\/31\\/1459.html\\/\u0026#34; }, \u0026#34;image\u0026#34;: { \u0026#34;@type\u0026#34;: \u0026#34;ImageObject\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https:\\/\\/imiku.me\\/cover.png\u0026#34;, \u0026#34;width\u0026#34;: 1e3, \u0026#34;height\u0026#34;: 519 }, \u0026#34;genre\u0026#34;: \u0026#34;post\u0026#34;, \u0026#34;keywords\u0026#34;: \u0026#34;MacOS,Safari,语音合成\u0026#34;, \u0026#34;wordcount\u0026#34;: 171, \u0026#34;url\u0026#34;: \u0026#34;https:\\/\\/imiku.me\\/2021\\/07\\/31\\/1459.html\\/\u0026#34;, \u0026#34;datePublished\u0026#34;: \u0026#34;2021-07-31T13:27:27\\u002b00:00\u0026#34;, \u0026#34;dateModified\u0026#34;: \u0026#34;2021-07-31T13:27:27\\u002b00:00\u0026#34;, \u0026#34;author\u0026#34;: { \u0026#34;@type\u0026#34;: \u0026#34;Person\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Ice-Hazymoon\u0026#34; }, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34; } \u0026lt;/script\u0026gt;   图片部分支持自动添加 srcset 部分，SEO+++，支持懒加载，默认有加载动画，自动添加 ALT 属性，支持图片查看缩放动画\n1 2 3 4 5 6 7 8 9 10 11  \u0026lt;img width=\u0026#34;800\u0026#34; height=\u0026#34;617\u0026#34; data-zoomable=\u0026#34;\u0026#34; data-lazyload=\u0026#34;\u0026#34; alt=\u0026#34;左侧选择【朗读内容】，点击系统声音\u0026#34; class=\u0026#34;medium-zoom-image entered loaded\u0026#34; data-ll-status=\u0026#34;loaded\u0026#34; srcset=\u0026#34;2021/07/31/1459.html/1630060151397631_hu3dcef8126cf1a840a0279e998069a100_52511_640x0_resize_catmullrom_3.png 640w, 2021/07/31/1459.html/1630060151397631_hu3dcef8126cf1a840a0279e998069a100_52511_1080x0_resize_catmullrom_3.png 1080w\u0026#34; src=\u0026#34;2021/07/31/1459.html/1630060151397631.png\u0026#34; \u0026gt;   画廊模式 支持画廊模式，语法来自 Typlog\n  \n    \n标签和分类页面 标签页面和分类页面\n \n说说类型文章 根据文章类型，判断应该显示什么样的卡片\n \n友情链接页面 支持链接语法，可用于友情链接页面\n \nGitHub 项目展示 自动抓取 GItHub 上的项目，并根据 star 数量排名，生成GitHub 项目页面\n \n归档页面 自动生成漂亮的时间轴归档页面\n \nTwitter 动态页面 支持同步 Twitter 动态的更新页面，抓取 Twitter 上的图片和视频资源到本地，并使用 jsDelivr CDN 防止大陆地区无法访问图片的问题\n \nGitHub Actions 支持 支持 GitHub Actions 自动部署，只需要安静的写文章，剩下的交给 Actions 完成就行，打包完后自动上传到 GitHub Pages 上，自动更新和下载 GitHub 和 Twitter 页面数据，并且自动转换资源链接到 jsDelivr CDN，加快站点访问速度\n \n其他特性：\n 分类、标签页面 文章阅读时间 网站运行时间 RSS 自动生成 Sitemap 自动生成 i18N 多语言博客 页面无刷新加载，自带进度条 文章 TOC 图片渐进式加载 文章更新时间 夜间模式 语言切换 PWA 支持 AMP 支持 分享功能 阅读进度条 评论系统 文章编辑器  因为目前主题处于开发阶段，还有一些BUG等待被发现和解决，待稳定后将会开源至 GitHub\n","date":"2021年08月08日","permalink":"/2021/08/31/wordpress-to-hugo.html/","title":"博客迁移到了 Hugo"},{"content":"断断续续从五十音开始学了 5-6 个月，N3 测试的时候考了 174，N2 的时候就没好好学，每天专注于打缺氧，本以为这次考试稳挂了，成绩发表的当天 9 点就起床查询，没想到居然过了，目标 90 的及格线，还超了几十分，也算是放下个包袱了，等学完西班牙语以后继续冲 N1，争取考个高点的分。\n 查询成绩 \n","date":"2021年08月08日","permalink":"/2021/08/23/n2-pass.html/","title":"N2 合格！！"},{"content":"在上篇文章中提到的 写了个西班牙语学习工具 中，最近在 Mac 上使用时发现语音合成一直没有声音，研究了半天才找到解决方法。\n 在系统设置中打开【辅助功能】  左侧选择【朗读内容】，点击系统声音  勾选需要的语言，然后确定 \n之后会自动下载所需的 TTS 语言包，下载完成后重启 Safari 浏览器\nTTS 合成代码 1 2 3 4 5 6 7  window.speechSynthesis.cancel(); const utterThis = new window.SpeechSynthesisUtterance(); utterThis.text = \u0026#39;Hola!\u0026#39;; utterThis.lang = \u0026#39;es-ES\u0026#39;; utterThis.volume = 1; utterThis.voice = speechSynthesis.getVoices().filter(e =\u0026gt; e.lang === \u0026#39;es-ES\u0026#39;); // 这句很重要，否则将会合成英文的发音 window.speechSynthesis.speak(utterThis);   ","date":"2021年07月07日","permalink":"/2021/07/31/1459.html/","title":"JS 西班牙语语音合成在 MacOS 上没有声音的问题"},{"content":"方法A： 使用 /match 科学公式创建\n1 2 3 4 5 6  \\begin{array}{|c | c |c |}\\hline \\text{ Hello } \u0026amp; \\text{ World } \u0026amp; \\text{ From a simple table } \\\\\\hline equals() \u0026amp; true \u0026amp; false \\\\\\hline compare() \u0026amp; 0 \u0026amp; \\text{Here is a text.} \\\\\\hline mismatch() \u0026amp; -1 \u0026amp; \\text{ or \\textbf{bold} text.} \\\\\\hline \\end{array}    Notion 如何创建简单表格（非数据库） \n Notion 如何创建简单表格（非数据库） \n方法B： 把内容排个序，可以达到类似表格的效果\n Notion 如何创建简单表格（非数据库）  Notion 如何创建简单表格（非数据库） \n","date":"2021年07月07日","permalink":"/2021/07/29/1451.html/","title":"Notion 如何创建简单表格（非数据库）"},{"content":" GitHub Ice-Hazymoon/spanish\n 预览  Your browser doesn't support HTML5 video. Here is a link to the video instead.   特性  该网站用于帮助初学西语的人更快的练习正确的发音 输入西语单词或短文，将显示每个单词的分音节和音节的重读 点击单词可以发音 如果无法使用，请更换 PC 的 Chrome 浏览器  ","date":"2021年07月07日","permalink":"/2021/07/26/1445.html/","title":"写了个西班牙语学习工具"},{"content":"网站增加了多语言支持，正在逐渐完善翻译中，目前仅支持日语，中文和英语，未来会增加多语言文章功能~\n","date":"2020年12月12日","permalink":"/2020/12/05/1385.html/","title":""},{"content":" 这是一篇碎碎念，以后会经常通过类似的文章来记录想法和思考\n 安乐死的普遍定义为：指对无法救治的病人停止治疗或使用药物，让病人无痛苦地死去。在中国定义为：“指患不治之症的病人在垂危状态下，由于精神和躯体的极端痛苦，在病人和其亲友的要求下，经医生认可，用人道方法使病人在无痛苦状态中结束生命过程。”\n那么，为什么中国到目前都没有开展安乐死合法化，如果一个患有绝症的人，每天承受着剧痛，只有靠药物才能维持生活，语言能力正在逐渐丧失，你还有勇气对他说”坚强的活下去” 这几个字吗\n首先来看安乐死的主要方式：\n 积极安乐死（主动安乐死）：部分人也可以理解为“协助自杀”，指对符合安乐死条件的病人，医生使用药物或其他方式尽快结束病人痛苦的死亡过程 消极安乐死（被动安乐死）：对符合安乐死条件的病人，医生停止使用抢救措施而仅给适当的维持治疗或者撤除所有的治疗和抢救措施，任其自然死去 间接安乐死：通过镇静剂等药物加快死亡速度，类似消极安乐死  包括我国在内的绝大多数国家和地区都对消极安乐死持容忍态度, 但对积极安乐死则认为属于犯罪。\n而国外也仅有相当少数的国家支持主动安乐死，例如荷兰：\n荷兰是世界上第一个安乐死合法化的国家。2001 年 4 月 1 日, 荷兰国会众议院、 参议院分别以 104 票赞同、 40 票反对和 46 票赞同、 40 票反对、 1 票弃权, 通过了安乐死合法化法案。\n而“波斯特马案件”成为荷兰主动安乐死合法化的主要起点。\n 1971年，荷兰一名叫做海特勤伊达·波斯特马医生的母亲患脑出血，导致部分瘫痪、失聪、和语言功能障碍。由于仁慈和无法忍受其母亲健康极度受损，波斯特马给她的母亲注射吗啡使之丧失意识，并给她母亲注射箭毒致死。\n波斯特马在接受审判时作证道：“当我看到我母亲，一位健康极度受损的人，悬挂在那张椅子上，我再也无法忍受了。”在波斯特马报告当局后，她被控谋杀接受了审判，但仅被判处缓刑。\n两年后即1973年，荷兰医学会与荷兰的检察官们达成了一个协议，根据这一协议，医生若遵循下面四条指南就不会被控谋杀：1. 只有有行为能力的病人才能要求死亡；2. 病人的要求必须在无压力的情境下，一再提出，毫不含糊，并形成书面文字；3. 经治医生必须与另一位医生进行磋商，证实第二种情况；4. 病人必须身处无法忍受的疼痛或者痛苦之中，没有改善的可能。\n  荷兰大法院认为，即便重症痴呆患者没有“明确表达意思”，也可以实施安乐死。\n“只要满足安乐死的条件，即可根据重症痴呆患者提前写下的文件，对其实施安乐死”。法院提到的“条件”是指患者持续经历极其严重的痛苦和至少取得两名医生的同意。不过，“还需要患者在痴呆恶化到无法自主表达意识之前做出(安乐死的)要求”。\n到目前，荷兰的安乐死标准主要有以下条件：\n 病患承受难以忍受的痛苦并且无法改善。 病患需为自愿要求并且非常坚定(病患的意愿不得受到其他人影响或是精神疾病或药物影响)。 病患需知悉其他的选择，可能性或是选项。 需咨询过一位以上的医生，并了解整个状况。 执行过程需经由医疗单位确保符合病患的需求以及医生必须在场。 病患最少需满 12 岁以上 (12~16岁的病患需要由家长同意)。  中国的安乐死现状 早在1987年，中国法学界、医学界和哲学界就开始了对安乐死问题的讨论（缘由是陕西汉中市的一家医院为一位女性肝硬化病人实施积极安乐死），我国尚未对安乐死作太多的法律规定，只是仍将安乐死视为非法剥夺人的生存权利。在我国，合法剥夺他人生命的行为只有两种：一是由司法人员依法执行死刑；二是在符合正当防卫条件下的自卫杀人。但积极安乐死在我国被国人在文化心理和社会心理上所接受，并默许这种行为。虽然我国法学界、医学界的有关人士也在主张为积极安乐死立法，详细解释执行条件和步骤，但又因为安乐死所涉及的学术领域复杂，一时尚不能如愿地阐明。\n一些争论 在道德层面，是否应该让医生来背负“杀人”的权利，而人类又是否有自杀的权力？\n如果人人都为了不在被病痛折磨而安乐死了，人类的医学发展是否会变的缓慢？\n安乐死合法化以后，人类是否会更容易的放弃生命？\n患者死后，会不会给社会或家庭带来经济或精神的损失\n老年人或弱势群体，会担心自己成为社会或家庭的负担，安乐死合法化会增加他们死去的压力吗？如何判定患者是否是真正的自愿，或许是被他人所迫，对自身的情况是否真正了解，还有精神上的压力。\n如果国内安乐死合法化后，成本应该如何让人们接受。瑞士是唯一一个支持外国人前去自杀的国家，据部分不可靠资料统计，瑞士安乐死一次的费用在40w人民币左右。如果设备和制度不完善，是否可能会出现“被安乐死”的情况。又或者普通人和穷人连自杀都不配？\n以后是否会被不法分子利用，又或者出现家属索要赔偿金的情况\n个人想法 人类是一种很神奇的生物，既要维持社会共存的关系同时又在为自我的权力所担忧。在社会层面，我是完全否定安乐死的，因为他人的痛苦和我自身无关，但如果因为安乐死法的实施而影响到了社会，可能会触及我的利益，那当然是全盘反对。\n但如果我自己某天遇到了需要安乐死的情况，我可能会想尽一切办法去实行，我自己的生死想由自己来掌控，而不是社会和法律。\n毕竟，人类的本质就是双标🤪\n安乐死是一个在社会、伦理、医学、法律等多层次多方面都需要慎重考虑的复杂问题，如果某一天世界上出现了一种无痛死亡，且人人都能买得到的药物，那世界会。。。。\n其他资料 【中日双语】NHK特别篇 她选择了结束生命 ~日本女性安乐死纪实~【MT字幕组】\n引用  安乐死法案\u0026lt;百度百科\u0026gt;：https://baike.baidu.com/item/安乐死法案 协助自杀\u0026lt;维基百科\u0026gt;：https://zh.wikipedia.org/wiki/协助自杀 荷兰安乐死议题\u0026lt;维基百科\u0026gt;：https://zh.wikipedia.org/wiki/荷蘭安樂死議題 安乐死\u0026lt;维基百科\u0026gt;：https://zh.wikipedia.org/zh-hans/安乐死 维持生命医疗决定法\u0026lt;百度百科\u0026gt;https://baike.baidu.com/item/维持生命医疗决定法  ","date":"2020年12月12日","permalink":"/2020/12/05/1377.html/","title":"为什么中国没有安乐死合法化？"},{"content":"经历了一个月的运输，终于到了，颜值还行，比上一代的黑色清爽多了，亚马逊买的，到手价2300左右，现在估计降价了点，看到某些网友2100就拿到手了\n Oculus Quest 2上手“评测” \n Oculus Quest 2上手“评测” \n软件优化 首次激活时如果提示WiFi网络受限，可以下载官方 Oculus 手机APP连接激活\n之后可以下载个 SideQuest ，修改机器分辨率为单眼2.5k，刷新率修改为90hz，还能超频下 GPU 和 CPU，不知道为啥 Facebook 要在软件上砍一刀，学小米和苹果？为了省电？还是为了延长硬件寿命？\n除此之外，SQ 还可以卸载，安装，提取APP，浏览文件等，功能还算强大，网上也有一些个人汉化版\n Oculus Quest 2上手“评测” \n 也可以用 ADB 来修改上述设置（重启后会失效\n1 2 3 4 5  adb shell setprop debug.oculus.textureWidth 2560 adb shell setprop debug.oculus.textureHeight 2560 adb shell setprop debug.oculus.cpuLevel 4 adb shell setprop debug.oculus.gpuLevel 4 adb shell setprop debug.oculus.refreshRate 90   关闭检测未知应用的代码 如果不禁用的话安装破解软件可能会有封号的风险\n1 2 3 4 5 6  adb shell pm disable-user --user 0 com.oculus.unifiedtelemetry adb shell pm disable-user --user 0 com.oculus.gatekeeperservice adb shell pm disable-user --user 0 com.oculus.notification_proxy adb shell pm disable-user --user 0 com.oculus.bugreporter adb shell pm disable-user --user 0 com.oculus.os.logcollector adb shell pm disable-user --user 0 com.oculus.appsafety   启用开发者模式 在 https://dashboard.oculus.com/organizations/create 申请，Create New Organization 随意填写名称，勾选 I understand，点击提交，打钩同意即可。\n开发者模式可以开启 USB 调试之类的功能，申请后在手机APP中——高级设置——开发者选项——启用\n使用体验 官方默认的头戴体验一言难尽，跟带了个颈箍咒一样，而且特别重，十个用过九个骂，感觉就是骗你买精英头戴，但据网友称精英头戴容易断，而且现在官方也断货了，可以去淘宝搜一些第三方的头戴，价格会便宜许多\n鼻子部分漏光严重，如果在意的话可以塞一坨纸挡着\n硬件和软件方面作为一体机完全够用了，追踪什么的感觉不到延迟，超频后小型游戏体验和 VIVE 差不多，除了头戴舒适度差点，其他都很满意。\n部分游戏锁区，比如：Kizuna AI – Touch the Beat! ，需要日区才能下载，明明有官方简中，却搞个这种操作，真让人不解。\n投屏 我用的是 SideQuest 带的投屏功能，如果不想用 SQ，可以单独下个 Scrcpy 来投屏。也可以无线串联，但对路由器要求会稍微有点高\n也可以尝试 ALVR，一个免费的VR无线投屏软件\n其他 由于 Facebook 的封号措施很谜，强烈不建议前期在 Oculus 商店买东西，一旦Facebook 账号被封，所有游戏都没了，不止一个人遇到这个问题了。破解版游戏也不是不能玩（\n","date":"2020年10月10日","permalink":"/2020/10/25/1362.html/","title":"Oculus Quest 2上手“评测”"},{"content":"船新主题已上线，遇到问题请联系 imiku.me@gmail.com 反馈\n","date":"2020年06月06日","permalink":"/2020/06/16/1359.html/","title":""},{"content":"最近重装了下系统，今天打开fb2k的时候发现所有歌曲都无法播放了，提示： foobar2000 音乐文件路劲更换后的解决方法 \n才想起来，装系统的时候把音乐文件移动到了另一个磁盘上，fb2k里的内容自然也都播放不了了，原先的备份也都是fpl 格式的，无法编辑，折腾了半天，找到了解决方案。\n解决方法 一、先将播放列表保存为了 m3u8 格式\n foobar2000 音乐文件路劲更换后的解决方法 \n二、打开保存好的播放列表，这时看到的就是明文的内容了，替换所有的路劲\n foobar2000 音乐文件路劲更换后的解决方法 \n三、替换好后先别急着导入，因为当前的播放列表里有很多重复的内容，需要去重后再重新导入。这里我写了个小工具来实现这一步骤。打开：文本去重工具 输入你播放列表的内容，将会自动帮你去重，把去重好的内容替换原来的歌单数据\n foobar2000 音乐文件路劲更换后的解决方法 \n四、重新导入歌单，即可正常播放 foobar2000 音乐文件路劲更换后的解决方法  foobar2000 音乐文件路劲更换后的解决方法 \n其他 可能你的fb2k的界面和我的有所不同，但大致的操作都差不多\n","date":"2019年06月06日","permalink":"/2019/06/09/1332.html/","title":"foobar2000 音乐文件路劲更换后的解决方法"},{"content":" 上一篇文章貌似太水了，重新写一下吧~\n 是什么 MikuTools 是一个轻量的工具集合，具体功能自己点开看吧\nhttps://t.imiku.me\n目前有将近50个的小工具，功能还在持续开发中…\n 支持夜间模式，晚上使用也不会伤眼睛了~ 兼容全平台，有个浏览器就能使用 不喜欢的功能可以在 【网站相关 –》 工具设置】 中将其隐藏，这样就不会让多余的功能留着戳眼睛了，首页仅保留自己想要的功能  性能 在轻量和方便的同时，速度也不能慢\n 支持PWA，大部分功能使用了一次以后均可离线使用，没有网络也行 热更新：因为是网站程序，不需要像普通APP一样每次更新功能都要重新下载，浏览器会自动帮你更新，如果没有更新会使用本地缓存，不会消耗你的手机流量 GTmetrix 和 Lighthouse 的跑分将近满分   MikuTools - 一个轻量的工具合集 \n MikuTools - 一个轻量的工具合集 \nPWA 可能是为数不多支持PWA的工具集合了吧\n至于啥是 PWA 请参考 少数派的这篇文章\n 支持将 PWA 应用添加到桌面的浏览器有：小米、手机百度、百度浏览器、Safari、Chrome 等（可能统计的不完整 使用支持 PWA 的浏览器打开 PWA 网站时会弹出添加到桌面的提示，如Chrome浏览器   MikuTools - 一个轻量的工具合集 \n优点  支持 PWA，即使是网站也能获得像 APP 一样的体验 样式简单，不花哨，支持夜间模式，支持隐藏不想要的工具，也没有多余的元素，每一个页面都有他该有的功能 仅仅是一个站点，跨平台，只需要一个浏览器即可运行  缺点  可能有人不喜欢这个样式？ 由于国产浏览器各种妖魔鬼怪盛行，因为使用了很多的新特性，所以对很多国产浏览器的兼容性不是很好，尤其是移动端 太穷，没钱买服务器，部分需要服务端支持的功能速度可能会有点慢  为什么要写这个网站 初衷是为了自己方便，因为每次要用到某些功能都需要到处找相应的功能，要花费大量的时间，而且很多类似的工具站对我个人来说体验不是很舒服，所以就自己写了个。刚写出来第二天只有4-5个功能，在酷安发布了一下，收到了很多评论和赞，反响很好，于是就决定开发成一个方便大众也方便自己的工具站\n未来有哪些打算 因为目前没有什么收入来源，服务器每个月都要支出1-200多元，所以还是有一些小压力。用户量上去了可能开销会更大。未来可能会考虑加广告，但只是在迫不得已的情况下会加，而且会尽量在不影响用户体验的情况下进行。\n工具会不断维护更新，有什么好的想法或者建议都可以反馈，说不定下一次更新就有你想要的功能哦~\n其他 关于什么叫 MikuTools ，那还用说吗 kora @(递花)\n初音未来 --\u0026gt; 初音ミク --\u0026gt; ミク--\u0026gt; MIKU --\u0026gt; MikuTools\n工具地址：https://t.imiku.me\n强烈推荐使用 Chrome 浏览器，如果你用不习惯，可以使用 Chrome 打开创建一个 PWA 应用到桌面以后再隐藏掉就好，这样用着也舒服\nQQ群：942386595，虽说不知道这个群有什么用，但还是欢迎进来闲聊~\n","date":"2019年03月03日","permalink":"/2019/03/26/1276.html/","title":"MikuTools – 一个轻量的工具合集"},{"content":"地址：https://t.imiku.me/\n主要是为了自己方便吧，未来会支持更多的小工具\n网站已支持PWA，如果你的浏览器支持可以添加到桌面方便以后使用\n 写了一个工具站 \n","date":"2019年02月02日","permalink":"/2019/02/19/1270.html/","title":"写了一个工具站"},{"content":"更新了一下 rsshub2qq，解决了一堆bug，有问题的话可以在评论区留言或者提交issues\n","date":"2019年02月02日","permalink":"/2019/02/15/1269.html/","title":""},{"content":"订阅RSSHub的更新并推送到QQ空间，主要是网上没有类似的轮子，IFTTT之类的又不支持QQ空间，无法将自己的推特和INS等动态同步过来，于是就自己随便造了个，代码大部分照搬了 grnd_bot\n项目地址 https://github.com/Ice-Hazymoon/rsshub2qzone\n效果  订阅RSSHub推送到QQ空间 \n使用 star 以后在项目根目录新建一个 credentials.js 文件，内容为：\n1 2 3 4 5 6 7 8  module.exports = { qq_number: \u0026#39;QQ号\u0026#39;, username: \u0026#39;QQ空间用户名\u0026#39;, password: \u0026#39;QQ密码\u0026#39;, urls: [ { name: \u0026#39;Twitter-Ice_Hayzmoon\u0026#39;, url: \u0026#39;/twitter/user/Ice_Hayzmoon\u0026#39;} //RSSHub链接  ] }   安装并运行\n1 2 3  git clone https://github.com/Ice-Hazymoon/rsshub2qzone.git npm install node index   其他 建议在服务器用浏览器登陆一次QQ空间，安全中心确认正常以后再使用脚本，否则可能会出现验证码，不建议在国外服务器上使用\n","date":"2019年01月01日","permalink":"/2019/01/09/1260.html/","title":"订阅RSSHub推送到QQ空间"},{"content":"新年快乐！！\n","date":"2019年01月01日","permalink":"/2019/01/01/1256.html/","title":""},{"content":"接上文\n历经3个多月的时间终于到货了，中间的各种运费加起来花了303/本，普通版的画册还没到，只到了两本限量版的画册\n随便放几张图康康吧~  哔哩哔哩周年纪念画册限量版到货  哔哩哔哩周年纪念画册限量版到货 \n 哔哩哔哩周年纪念画册限量版到货  哔哩哔哩周年纪念画册限量版到货 \n 哔哩哔哩周年纪念画册限量版到货  哔哩哔哩周年纪念画册限量版到货 \n 哔哩哔哩周年纪念画册限量版到货 \n其他 如果有意向的“原价”(303)出一本吧，另一本未拆封，的想要的可以QQ联系我（1733708055）\n两本都已卖出\n","date":"2018年12月12日","permalink":"/2018/12/26/1247.html/","title":"哔哩哔哩周年纪念画册限量版到货"},{"content":"一个活跃的应援群怎么能没有一个推送君呢，人力成本又太高，于是就诞生了这个机器人@(脸红)。定时抓取Twitter和Instagram并进行翻译后推送到QQ群\n效果预览  用RSSHub订阅你的爱豆并推送到QQ群 \n使用 下载酷 Q，文中使用的是酷 Q Pro 版本。然后安装 HTTP API 插件\n申请一个 有道翻译的 API\ncredentials.js 相关配置 在根目录新建一个 credentials.js 文件，内容为\n1 2 3 4 5 6 7 8 9 10 11  module.exports = { // 酷Q授权  accessToken: \u0026#39;mikutoken\u0026#39;, secret: \u0026#39;mikuqwq\u0026#39;, rsshub: \u0026#39;http://rsshub.app\u0026#39;, // 有道翻译  youdao: { appid: \u0026#39;\u0026#39;, key: \u0026#39;\u0026#39; } }   HTTP API 的相关配置 依次进入酷Q Pro/data/app/io.github.richardchien.coolqhttpapi/config目录，编辑对应的 json 文件（bot的QQ号.json）。用以下内容覆盖，access_token和secret记得自己修改\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  { \u0026#34;host\u0026#34;: \u0026#34;0.0.0.0\u0026#34;, \u0026#34;port\u0026#34;: 5700, \u0026#34;use_http\u0026#34;: true, \u0026#34;ws_host\u0026#34;: \u0026#34;0.0.0.0\u0026#34;, \u0026#34;ws_port\u0026#34;: 6700, \u0026#34;use_ws\u0026#34;: false, \u0026#34;post_url\u0026#34;: \u0026#34;http://127.0.0.1:8989\u0026#34;, \u0026#34;access_token\u0026#34;: \u0026#34;mikutoken\u0026#34;, \u0026#34;secret\u0026#34;: \u0026#34;mikuqwq\u0026#34;, \u0026#34;post_message_format\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;serve_data_files\u0026#34;: true, \u0026#34;update_source\u0026#34;: \u0026#34;github\u0026#34;, \u0026#34;update_channel\u0026#34;: \u0026#34;stable\u0026#34;, \u0026#34;auto_check_update\u0026#34;: false, \u0026#34;auto_perform_update\u0026#34;: false, \u0026#34;show_log_console\u0026#34;: true, \u0026#34;log_level\u0026#34;: \u0026#34;info\u0026#34; }   添加订阅信息 打开 db/rss.json 文件，添加需要订阅推送的内容\n1 2 3 4 5 6 7 8 9 10  { \u0026#34;Twitter-Ice_Hazymoon\u0026#34;: { // 订阅名称 \u0026#34;url\u0026#34;: \u0026#34;/twitter/user/Ice_Hazymoon\u0026#34;, // rsshub 路由 \u0026#34;group\u0026#34;: [ // 要推送的群组 117474650 ], \u0026#34;translate\u0026#34;: false, // 是否启用翻译 \u0026#34;proxy\u0026#34;: true // 是否启用代理（主机为国内服务器，推送地址为国外时可以用到，比如Twitter），使用 http://127.0.0.1:1080 作为代理 } }   运行 1 2  $ yarn install # or npm install $ node index   其他  使用了 RSSHub 来实现订阅功能 推荐使用 supervisor 模块，炸了可以自动重启 虽然 酷 Q Air 也能用，但不能发图，未测试过 推荐使用有道或者Google翻译，百度翻译效果不是很好，可以自行修改 src/translate.js 文件 可能有很多 bug，慢慢修复 我永远爱着___.jpg@(干杯)  ","date":"2018年10月10日","permalink":"/2018/10/16/1230.html/","title":"用RSSHub订阅你的爱豆并推送到QQ群"},{"content":"第一次参加东方同人线下活动，有点小激动，主要是奔着瑶姐去的@(脸红)\n前一天晚上3点睡觉，6点起床，完全没有精神，第一次坐高铁，本以为能在高铁上睡一会，结果没想到30分钟就到广州了，睡也没睡成。\n到了以后和约好的网友面基一起逛展子，已经快两年没去过漫展这类的展会了。\n中午一点去找蚊子面基，白白浪费了我的体力@(放鸽子)\n下午和另外俩网友面基一起逛下午场，主要看打则和跳舞\n这次参展最开心的是魂音泉来了，宣传海报上也没写要来，算是一份惊喜吧，也要到了签名\n一堆人跟着跳⑨舞   Liveparty Live上异常的嗨，由于排队排的早，抢到了前排的位置，能近距离的看到各位大佬。\nLive结束，缓过神来以后身体已经废了，腿和腰疼的厉害，手也因为全程挥应援棒导致一直在抖，完全抬不起来@(流眼泪)\n至于我为啥5号的展子今天才发，玩的太嗨连续两天浑身酸痛，没力气写博客了@(被窝)\n相关图片  不要问我为什么那么糊，不是我拍的@(吐舌)\n   \n   \n微博偷了一部分     \n其他  没抢到会场限定CD 没抢到全社团签名的扇子 一天到晚都没吃饭 地铁坐反了两次，坐过站一次 可能身体连续两天不能走动了 买了一堆CD回去以后发现电脑没光驱@(流眼泪) 这一届的网友都太可怕了（笑  ","date":"2018年10月10日","permalink":"/2018/10/08/1212.html/","title":"广州 THO 和 Liveparty 参展记录"},{"content":"画集详情\n17号知道的这件事，定了个闹钟，准备19号00.00准时开抢画集@(脸红)。从一开始就没打算能抢成功过（甚至连钱都没准备好），不过还是想试一试，万一抢到了呢@(流血)\n19号 0.00到了以后，用我单身多年的手速狂点购买按钮，中途出现了不下30次的“购买失败”，“库存不足”，“服务器错误”，“购买数量达到上限（此处手动黑人问号）”等等错误。好不容易抢到了一本准备付款时发现原来没填过收货地址（第一次在会员购上买实体商品）。随便填了一个收货地址以后点击付款，发现微信支付一直支付失败，只好切换到支付宝用花呗付款，但阿里的APP光启动就好几十秒，然后依旧支付失败，到00.01的时候已经没货了，本来已经放弃的我到订单详情里一看。。。。\n出现了三笔未付款的订单（此处再次手动黑人问号脸），准备支付的时候微信依旧不能付款，还是各种错误，最后用支付宝的花呗买了\n买完后发了一会呆，开始考虑这三本的去向，打算自己留一本，送人一本，咸鱼挂一本300卖了赚个早点钱（被B站服务器逼成黄牛）@(真棒)\n BILIBILI ART WORKS-9周年 2233 纪念画集典藏版 \n明明是视频站偏偏要弄电商 之后准备改个订单地址，发现根本没这个入口，客服也没这个权限，甚至没有退款入口，三笔同样的订单也不能合并运费，客服等了一个小时都没排上队（等待页甚至要手动刷新排队编号），提交了两个留言等了快18个小时才回复其中一个，而且留言页的界面比我第一次写 hello world 写出的样子还丑，就像十年前的留言板，甚至貌似还是用的第三方服务@(捂头)\n事情才没这么简单 第二天下午客服打了个电话给我说一个用户最多只能买两本，要退一本回去，作为补偿赔我一本价值200的普通版的画集（可见这玩意儿没什么成本），不过也不亏，普通版的画集卖出去还能赚200，比放咸鱼赚14块的早餐好多了\n对了，客服小哥哥声音挺好听（诶？\n其他  画集并没有那么难抢（你甚至可以先用50秒洗个手再用最后一秒去慢慢下单），如果没有数量上限的话我最后订单里可能出现10多本 01.00过后还有一批因为多抢未付款而退回的货，这个时间段很好抢 会员购的各方面都很辣鸡，不过价格挺便宜 结束抢购以后评论区就开始各种喷黄牛之类的了，明明自己不去守着还怪抢多的人了@(竖中指)  晒图  等发货中\n ","date":"2018年09月09日","permalink":"/2018/09/19/1187.html/","title":"BILIBILI ART WORKS-9周年 2233 纪念画集典藏版"},{"content":"本来以为17号才到的台风居然跑着提前到深圳了，一睡醒就下起了大雨（13.00起床的我@(被窝)），在床上懵了一个小时以后突然反应过来我可能要被饿死了@(弱智)，家里吃的什么都没有，外卖也全部停了，只好顶着台风出去买泡面。刚一出门就吹坏了一把伞，人差点没飞起来。。。还好在路边上捡了一件雨衣和一把伞勉强苟到了超市，面包零食全部卖完了，只剩下几桶味道不是很受欢迎的泡面。比没吃的强\n到家又在床上懵了一会以后准备泡泡面，然后发现停水了。。。@(自杀)，只能靠仅剩的两条士力架撑到台风走。\n吃完士力架就开始发困了（标准废宅的日常），准备定个闹钟等4.30台风最大的时候出去拍两张照片，然后一睡就到了18.00，睡醒以后台风已经走了，只能靠傻逼群友们发的视频安慰下自己@(流眼泪)\n第二天在路上拍的照片）\n肥宅是如何度过台风——“山竹”的 \n肥宅是如何度过台风——“山竹”的 \n肥宅是如何度过台风——“山竹”的 \n对了，第二天照常搬砖@(搬砖)\n肥宅是如何度过台风——“山竹”的 \n","date":"2018年09月09日","permalink":"/2018/09/18/1176.html/","title":"肥宅是如何度过台风——“山竹”的"},{"content":" 最近公司在做一个后台管理系统，顺便在这里记录一下登录权限验证的过程, 以便以后使用\n 工具： vue全家桶（Vuex，Vue Router，Vue） + axios；\n思路： 在登录页面登录成功后后台返回一个 token（该 token 用于验证用户登录状态），将 token 保存在 cookies 和 store 里。之后每次在向后端发送请求时在 header 里添加一个 token 字段用于验证用户状态，如果 token 失效，接口返回状态码 300, 使用 axios 创建一个拦截器，如果返回接口的状态码为300，将清除cookies 和 store 里的 token 值并转到登录页面。\n每次刷新页面后 store 里的数据会丢失， 所以将判断 cookie 里是否存在 token ，如果存在， 将其赋予到 store 中保存\n开始撸代码 创建一个 axios 拦截器\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  // request.js import axios from \u0026#39;axios\u0026#39;; import auth from \u0026#39;./auth\u0026#39;; import store from \u0026#39;./store\u0026#39;; import router from \u0026#39;./router\u0026#39;; const request = axios.create({ //创建一个拦截器  baseURL: \u0026#39;\u0026#39;, timeout: 5000 }); request.interceptors.request.use( config =\u0026amp;gt; { if (store.state.token) { config.headers[\u0026#39;token\u0026#39;] = auth.getToken().token; // 在头部设置一个 token 字段来验证用户状态  } return config; }, err =\u0026amp;gt; { return Promise.reject(err); } ); request.interceptors.response.use( response =\u0026amp;gt; { if (response.data.code === 300) { // 如果 code 为 300 表示token已失效， 需要重新登录  store.commit(\u0026#39;logout\u0026#39;); // 删除token  router.replace({ // 跳转到登录页，并记录下当前页面的路由路径  path: \u0026#39;/login\u0026#39;, query: { redirect: router.currentRoute.path } }); } return response; }, error =\u0026amp;gt; { console.log(error) return Promise.reject(error); } ); export default request;   创建一个 auth.js 用于存放操作 token 的函数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  // auth.js import Cookies from \u0026#39;js-cookie\u0026#39;; const TokenKey = \u0026#39;Admin-Token\u0026#39;; // 存储在cookies中的名字  export default { getToken() { //获取token  return Cookies.get(TokenKey); }, setToken(token) { //设置token  return Cookies.set(TokenKey, token); }, removeToken() { //删除token  return Cookies.remove(TokenKey); } };   创建一个 store.js 用于存放vuex的一些配置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  // store.js import Vue from \u0026#39;vue\u0026#39;; import Vuex from \u0026#39;vuex\u0026#39;; import auth from \u0026#39;./auth\u0026#39;; Vue.use(Vuex); export default new Vuex.Store({ state: { user: {}, token: null, title: \u0026#39;\u0026#39; }, mutations: { login: (state, data) =\u0026amp;gt; { auth.setToken(data); state.token = data; }, logout: state =\u0026amp;gt; { auth.removeToken(); state.token = null; } }, actions: {} });   在 main.js 中给路由加一个全局前置守卫 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  // main.js //··· import auth from \u0026#39;./auth\u0026#39;; import router from \u0026#39;./router\u0026#39;; import store from \u0026#39;./store\u0026#39;; import axios from \u0026#39;./request\u0026#39;; Vue.prototype.$http = axios; // 页面刷新时，重新赋值token if (auth.getToken()) { store.commit(\u0026#39;login\u0026#39;, auth.getToken()); } router.beforeEach((to, from, next) =\u0026amp;gt; { // 给路由添加一个全局前置守卫  if (to.meta.requireAuth) { // 在路由配置中添加一个 meta.requireAuth 字段用于判断是否需要验证登录状态  if (store.state.token) { // 通过vuex state获取当前的token是否存在  next(); } else { next({ //如果token不存在， 跳转到登录页面， 并将当前页面的路由保存到url参数中， 以便登录成功后再跳转回当前页  path: \u0026#39;/login\u0026#39;, query: { redirect: to.fullPath } }); } } else { next(); } }); //···   登录页面 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  // Login.vue  // 省略...  login() { //点击登录按钮后执行  this.$http .post( \u0026#39;http://127.0.0.1:8090/api\u0026#39;, { account: this.from.username, password: this.from.password } ) .then(e =\u0026amp;gt; { if (e.data.code === \u0026#39;200\u0026#39;) { // 如果返回状态值等于200 将token存储到 cookie 中  this.$store.commit(\u0026#39;login\u0026#39;, { token: e.data.data.token, identity: e.data.data.identity }); let redirect = decodeURIComponent( this.$route.query.redirect || \u0026#39;/\u0026#39; ); // 获取当前页面中的redirect参数， 用于登录成功后进行跳转  this.$router.push({ path: redirect });// 跳转到登录前的页面  } else { // 登录失败处理  } }) .catch(err =\u0026amp;gt; { console.log(err) }); } // 省略...   退出登录 1 2 3 4 5 6 7 8 9 10  // 省略...  logout() { // 点击退出登录按钮后  this.$store.commit(\u0026#39;logout\u0026#39;); // 调用 vuex 中的logout方法用于删除 token  this.$router.replace({ // 跳转到登录页面  path: \u0026#39;/login\u0026#39; }); } // 省略...    至此， 一个简单的登录状态验证就搞定了@(撒花)\n 参考了：\n– 摸手，带你用vue撸后台 系列二(登录权限篇) – vue-axios-github\n","date":"2018年09月09日","permalink":"/2018/09/11/1172.html/","title":"Vue 登录验证练习"},{"content":" 离职前怎么能不把桌面设置个好看点的壁纸呢\n  离职壁纸 \n效果图↓\n 离职壁纸 \n","date":"2018年08月08日","permalink":"/2018/08/26/1163.html/","title":"离职壁纸"},{"content":"最近要换个地方搬砖了, 离职前准备清下电脑, 于是总结了下清理时的几种方法@(递花)\n删除所有的个人资料 主要删除 C:\\Users\\用户名 下的文件, 挨个检查, 确认无误没有遗漏后再反复擦除一遍, 程序猿的话一定要删除个人目录下的 .ssh 文件夹, 为啥我也就不细说了@(脸红)\n可以使用 CCleaner 这类的软件\n 然而, 光删除并没有什么用, 对于干IT行业的人来说, 谁知道下一个来的人会不会把你删除过的数据恢复出来, 所以就需要下面的几个方法来完整的清除你所有的数据\n 擦除硬盘记录, 让数据无法恢复 使用 cipher /w: 命令擦除数据 cipher 是 windows 自带的命令, 用于加密, 擦除数据等操作. /w 项用于反复用0和1读写硬盘来达到完整擦除数据的效果, 并不会删除整个分区. 使用方法如下\n win + r 输入 powershell 或者 cmd 在小黑框里输入 cipher /w:D (这里的 D 为你想要擦除的磁盘分区)  运行后见下图\n 离职时如何完整的清理自己的电脑 \n 擦除完以后使用 Ontrack EasyRecovery 扫了一遍, 基本全部删除了的文件都扫出来了….(据说扫出来也不能很好的恢复?) 因为软件是免费版, 所以也没有尝试恢复数据, 总之非常不好使.\n 使用 CCleaner 擦除数据 CCleaner 自带一个擦除空白空间的功能, 勾选 Wipe Free Space 即可\n 离职时如何完整的清理自己的电脑 \n 由于时间有点慢, 就没尝试太多, 大家可以试试\n 格式化(适用于没有需要保留数据的分区) 对于没有数据的硬盘来说, 格式化可能是最快速清理数据的方法了, 格式化时不要勾选快速格式化, 快速格式化只是对所有文件加上了 已删除 的 tag, 而格式化则会将磁盘删除以后重写一遍, 可以删除的更彻底.\n 完整式化一次以后依旧使用 Ontrack EasyRecovery 尝试恢复了下数据, 基本没有什么太多的数据可以扫出来.\n 使用专业的软件擦除数据 我是用的是 Eraser 这款软件, 专门用来擦除数据的, 自带了很多专业的标准, 比如Gutmann和DoD 5220.22这样的国防级擦除标准. 使用方法:\n在 https://eraser.heidi.ie/download/ 下载最新版本的软件\n安装时选第一个安装就好了, 运行后左上角新建一个任务(New Task), 任务类型(Task Type) 选择第一个手动运行. 然后点左下角的Add Data添加要擦除的数据, 普通用户可以选删除回收站(Recycle Bin), 擦除方法可以选 DoD 5220.22 然后点Ok, 在你创建的任务上点击右键, run 一下, 耐心等待就好了\n 删除完毕后基本没有扫描出和自己相关的一些文件了， 效果海星， 就是速度很慢， 3T的硬盘花了2天多\n 人工反复擦除 自己用大文件填满, 删除, 填满, 删除, 反复操作, 如果你有足够的耐心的话@(弱智)(或许可以试试 fsutil 命令?)\n物理删除(适用于家里有矿的人) 简单的来说就是物理破坏硬盘数据, 或者直接把硬盘带走(如果公司同意的话), 像Google那样的大公司就是这么干的~@(搬砖)\nwin10 自带的重置功能  可以完整的擦除用户资料, 因为公司电脑是win7, 所以没尝试过\n 其他 入职时可以用自己的电脑, 硬盘, 或者用BitLocker加密一下.\n软件能用便携版就用便携版, 没有便携版就找找有没有绿色版, 这样删除时可以更方便\n","date":"2018年08月08日","permalink":"/2018/08/25/1157.html/","title":"离职时如何完整的清理自己的电脑"},{"content":"原来没刷过抖音, 在 play 商店里看到了个国际版的抖音(Tik Tok). 准备下下来一睹国外小姐姐的风采, 打开后发现什么都刷不出来, 直觉告诉我一定被锁区了, 于是尝试了各种方法(酸酸乳开了全局, 系统也是英文的, 虚拟定位也开着, 飞行模式也没用),但还是没什么卵用, 翻了下 Google, 基本只有俩方法可以解决\n 拔掉 SIM 卡 用 1.20 版本的 Tik Tok 用国外SIM卡  首先是拔掉SIM卡: 基本不存在的, 不可能为了看个破视频而废那么大的功夫成本有点高@(竖中指), 也不能随时随地的刷了.\n然后就是使用 1.20 的老版本 Tik Tok: 但是由于版本太老, 很多新特性和bug都没有完善, 所以排除@(巴掌)\n综上所述, 这俩方法都基本不太现实, 于是就瞄准了 SIM 卡, 搜了一番发现可以通过终端来修改 SIM 卡的信息(国家, 运营商等等)\n开始作死(需ROOT权限) 先下载个终端软件, 类似的有很多, 我用的Ansole\n然后以下代码顺着敲\n1 2 3 4  su setprop gsm.sim.operator.alpha \u0026#34;eMobile\u0026#34; setprop gsm.sim.operator.iso-country \u0026#34;jp\u0026#34; setprop gsm.sim.operator.numeric \u0026#34;44000\u0026#34;   代码解释:\nsu: 使用 root 账户\nsetprop gsm.sim.operator.alpha “eMobile”: 设置 SIM 卡的运营商信息\nsetprop gsm.sim.operator.iso-country: 设置 SIM 卡的国家代码\nsetprop gsm.sim.operator.numeric: 设置 SIM 卡的移动设备网络代码, 将 MCC 和 MNC 连起来即可 具体参考移动设备网络代码\n然后就可以顺利访问啦~@(剪刀手)\n 安卓抖音使用国际服绕过锁区的方法 \n如何恢复  重启手机 把卡拔了再插上 把配置修改为原来的  其他: 可以将 set 改为 get 来获取SIM卡的配置\n1 2 3  getprop gsm.sim.operator.alpha getprop gsm.sim.operator.iso-country getprop gsm.sim.operator.numeric   iOS 的话好像不受地区限制, 如果有使用 1.2.2 版本即可解决\n","date":"2018年07月07日","permalink":"/2018/07/29/1136.html/","title":"安卓抖音使用国际服绕过锁区的方法"},{"content":"先上个图  写了一个 QQ 机器人 \n为什么 最近迷上了QQ机器人, 原来一直用的契约机器人和大佬写的各种各样的插件, 但发现有很多功能并不能满足自己, 也不会易语言, 刚好酷Q有各种各样的SDK, 于是就打算自己写一个. 一开始是用酷Q Air 写的, 后来有个大佬给了个 Pro 的授权码@(亲亲), emmmm, 于是将计就计, 用Pro版写了一些自认为比较实用的功能\n相关功能  /帮助 获取帮助 /一言 随机一句话服务 /以图搜番 {图片} 根据图片查找番剧 /搜图 {图片|关键字} 根据图片在pixiv查找相关信息 /点歌 {关键字} 从网易云点一首歌 /存图 {图片} 保存一张图片到本地 /点图 {pixivId} 根据pixiv id分享一张图 /二维码 {内容} 生成一个二维码 /短链接 {URL地址} 生成一个短链接 /ip {IP|域名} 查看ip或域名的相关信息 /rbq {资源名} 懂的人自然懂  如何使用  下载酷Q Pro 版本并安装 HTTP API 插件, 然后进行相关配置(见后面) 下载 bot.exe 密码: hazymoon 然后运行 没了  HTTP API 的相关配置说明 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  { \u0026#34;host\u0026#34;: \u0026#34;0.0.0.0\u0026#34;, \u0026#34;port\u0026#34;: 5700, \u0026#34;use_http\u0026#34;: true, \u0026#34;ws_host\u0026#34;: \u0026#34;0.0.0.0\u0026#34;, \u0026#34;ws_port\u0026#34;: 6700, \u0026#34;use_ws\u0026#34;: false, \u0026#34;post_url\u0026#34;: \u0026#34;http://127.0.0.1:8989\u0026#34;, \u0026#34;access_token\u0026#34;: \u0026#34;mikutoken\u0026#34;, \u0026#34;secret\u0026#34;: \u0026#34;mikuqwq\u0026#34;, \u0026#34;post_message_format\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;serve_data_files\u0026#34;: true, \u0026#34;update_source\u0026#34;: \u0026#34;https://raw.githubusercontent.com/richardchien/coolq-http-api-release/master/\u0026#34;, \u0026#34;update_channel\u0026#34;: \u0026#34;stable\u0026#34;, \u0026#34;auto_check_update\u0026#34;: false, \u0026#34;auto_perform_update\u0026#34;: false, \u0026#34;thread_pool_size\u0026#34;: 4, \u0026#34;server_thread_pool_size\u0026#34;: 1, \u0026#34;show_log_console\u0026#34;: false, \u0026#34;enable_backward_compatibility\u0026#34;: false }   计划  运行时有交互信息 追番功能 rss订阅 入群欢迎语 天气查询 存图功能增加web查看服务 修复各种bug ….  其他  不确定能用 暂时只在 酷Q Pro 版本上测试过, Air 应该也能用, 但发不了图片 在本地测试没问题, 丢到服务器上部分功能会失效, 原因暂时不知道, 闲的时候再修复  开源?  代码太垃圾, 不想丢人@(头顶便便)  ","date":"2018年07月07日","permalink":"/2018/07/13/1126.html/","title":"写了一个 QQ 机器人"},{"content":" 又双叒叕一个 Touhou lossless music collection 下载站 \n撸了个免费的 OneDrive, 花了几天时间把神种 Touhou lossless music collection 给下了下来, 应该每天都有流量限制, 大家悠着点, 要爬资源的不如直接去用种子下@(互相伤害)\n地址: https://api.imiku.me/one/\n其他  Touhou album image collection 和 TLMC supplementary materials 正在上传中… 已上传完毕 如果有真的喜欢的社团就去卖专辑支持吧 @(递花)  ","date":"2018年07月07日","permalink":"/2018/07/05/1118.html/","title":"又双叒叕一个 Touhou lossless music collection 下载站"},{"content":" 一个新的个人 \n预览  https://me.imiku.me\n 功能 一个个人聚合展示页, 目前功能有\n bilibili 追番 pixiv 收藏 GitHub 项目 友情链接的展示 wordpress 博客文章展示 网易云音乐歌单展示  暂时计划  QQ 音乐关注歌手 豆瓣图书 更多更多的接口 移动端适配 再好看一点… 更多的自定义配置  其他  首次访问会将接口数据缓存到本地, 24 小时更新一次 部分接口来自 https://api.imjad.cn  源代码  https://github.com/Ice-Hazymoon/homepage\n ","date":"2018年07月07日","permalink":"/2018/07/02/1105.html/","title":"一个新的个人 “聚合” 页"},{"content":"前言  因为每天公司的同事去吃饭时都要纠结今天吃什么, 往往一纠结就是十来分钟, 所以准备写一个程序来随机生成每天要吃的东西, 一开始只是准备弄个随机数, 从选好的数据库里随机一个数据出来, 然后做着做着就开始往奇怪的方向发展了…\n 预览  Your browser doesn't support HTML5 video. Here is a link to the video instead.   功能  获取实时天气 根据预算, 天气, 就餐方式等生成随机数据 live2d 看板娘 被变态程序员加上了语音 其他…  其他 源代码: 准备ing\n","date":"2018年06月06日","permalink":"/2018/06/30/1098.html/","title":"今天吃什么?"},{"content":"5月15日 老罗发布了改变世界的 TNT, 虽然不是锤黑, 但看到价格和各种吐槽还是忍不住笑了\n 表情包在线生成–支持 TNT 模式(语音识别) \n最近记仇的表情包挺火的, 所以也想做一个玩玩, 参考了 http://mdzz.space/ , 折腾了半天才把某些玄学 bug 解决了, 于是某位大佬发言了@(暗中流汗)\n 表情包在线生成–支持 TNT 模式(语音识别) \n嗯, 想法不错, 说弄就弄, 一开始准备用百度语音识别的 api 的, 发现流程有点复杂, 而且官方除了后端只有个 REST API 文档, 自己造轮子太麻烦了, 无意中发现了 Chrome 有语音识别的API, 有两种方法可以实现本地识别\n1. 在 input 标签上加一个 x-webkit-speech 属性 方法虽然可行, 但我这死活都出不来, 而且是调用Google语音的接口, 如果没有科学上网还用不了, 暂时不会使用用, 使用方法:\n\u0026lt;input x-webkit-speech /\u0026gt;  2. 使用 Web Speech API 部分浏览器自带了 Web Speech API , 可以本地进行语音识别, 不需要网络, 只不过兼容性不是很好, 主要函数:\nrecognition = new SpeechRecognition(); //创建一个 SpeechRecognition 对象 recognition.onresult = function (e) {}; //识别语音的函数 recognition.start(); //开始录音  其他API 可以参考 Web Speech API – Web APIs | MDN\n 对比了两个方法后毫无疑问选择第二个, 研究了半天终于成型了, 目前实现了\n 本地语音识别, 不依赖任何网络服务 可自行上传图片, 也可使用模板的图片 可自行替换文字, 可设置样式(居中, 加粗)  已知bug:\n 语音识别的兼容性很差, 请使用现代浏览器(推荐 Chrome) 语音识别经常会不生效, 请刷新后重试   表情包在线生成–支持 TNT 模式(语音识别) \n网站: https://ice-hazymoon.github.io/bqb_tnt/dist/\n源代码: Ice-Hazymoon/bqb_tnt\n","date":"2018年05月05日","permalink":"/2018/05/17/1071.html/","title":"表情包在线生成–支持 TNT 模式(语音识别)"},{"content":"哔哩哔哩 Level 5 达成\n","date":"2018年04月04日","permalink":"/2018/04/29/1068.html/","title":"哔哩哔哩 Level 5 达成"},{"content":"这几天做网站的时候遇到的恶心需求， 特此备份一下@(流血)\nHTML5 标签的兼容 aFarkas/html5shiv（巨坑， IE8 用 HTML5 的结构标签不解析样式。。。@(递菜刀)）\n媒体查询器的兼容 scottjehl/Respond（不能解析通过 @import 引用的 css）\n选择器兼容 keithclark/selectivizr\nFlex 布局 jonathantneal/flexibility（特好用， 有 postcss 的插件）\ncss前缀 postcss/autoprefixer\n在线处理： https://autoprefixer.github.io/\nES6处理 UglifyJsPlugin（虽然处理过了， 勉强能用， 但还是有些蜜汁报错）\nPromise stefanpenner/es6-promise\ncanvas arv/ExplorerCanvas （没用过， 别人告诉我的）\n其他  不要使用 data URL jQuery 有时候其实还挺好用的 可以用 outdated-browser 如果甲方够人性化的话@(白眼) 实在不行就用fireworks切图， 然后用表格布局@(上吊) Fuck IE！！！  ","date":"2018年04月04日","permalink":"/2018/04/25/1062.html/","title":"关于兼容 IE8 浏览器的相关备份"},{"content":"前几天用耳机听歌时, 不小心用耳机线扯到我的杯子了, 然后….嗯@(暗中流泪), 碎了, 当场就下单了一个蓝牙耳机\n搜了半天发现网易云和漫步者合作出了一款耳机, 看了下还行, 价格也挺便宜的, 于是下单了, 隔了三天才到货, 送了个鼠标垫(质量还不错, 挺大的), 耳机的话, 还行吧….\n包装  (非信仰)网易云x漫步者 W800X 耳机到手 \n相关参数  (非信仰)网易云x漫步者 W800X 耳机到手 \n包装内部  (非信仰)网易云x漫步者 W800X 耳机到手 \n赠品鼠标垫  (非信仰)网易云x漫步者 W800X 耳机到手 \n其他 声音的话….非常糟糕, 蓝牙还时不时断一下, 声音经过QQ音乐的DTS神调教, 总体来说还能听得过去, 毕竟价格摆在这\n对了, 鼠标垫挺好用的@(无聊)\n","date":"2018年04月04日","permalink":"/2018/04/22/1054.html/","title":"(非信仰)网易云x漫步者 W800X 耳机到手"},{"content":"评论区新增了阿鲁和泡泡的表情包, 大家快去试试吧~@(撒花)@[cos滑稽]\n","date":"2018年03月03日","permalink":"/2018/03/31/1045.html/","title":"评论区上线表情功能"},{"content":"今天在使用 xmapp 时, 遇到个很迷的问题, 就是无论怎么访问 localhost/icons 下的文件, 都返回404的错误, 这就很尴尬了, 纠结了半天的配置文件, 最后找到了解决办法\n见 xampp – apache – how to override index of /icons? – Stack Overflow\n大概原因就是, 当访问 localhost/icons 下的资源时, Apache会直接读取 /icons 下的图标资源\n打开%XAMPP_PATH%\\apache\\conf\\extra\\httpd-autoindex.conf文件可以看到:\n1 2 3 4 5 6  Alias /icons/ \u0026#34;D:/xampp/apache/icons/\u0026#34; \u0026amp;lt;Directory \u0026#34;D:/xampp/apache/icons\u0026#34;\u0026amp;gt; Options Indexes MultiViews AllowOverride None \u0026amp;lt;/Directory\u0026amp;gt;   将其注释即可\n1 2 3 4 5 6 7  # Alias /icons/ \u0026#34;D:/xampp/apache/icons/\u0026#34; # # \u0026amp;lt;Directory \u0026#34;D:/xampp/apache/icons\u0026#34;\u0026amp;gt; # Options Indexes MultiViews # AllowOverride None # Require all granted # \u0026amp;lt;/Directory\u0026amp;gt;   至今没明白为什么会有这么反人类的设计\n","date":"2018年03月03日","permalink":"/2018/03/29/1022.html/","title":"关于 xmapp Apache 访问 localhost/icons 下的文件时返回404的解决方案"},{"content":"博客一周年达成~ 如果你看到了这句话说明博主已经忘记了这件事\n才..才不是什么定时发布的文章呢!!\n","date":"2017年12月12日","permalink":"/2017/12/11/993.html/","title":"博客一周年达成~"},{"content":"Google Analytics 固然好用，但经常会出现被 Ad­block 此类的插件作为广告给拦截，有时候也会出现无法加载的情况，比如：\n 优化 Google Analytics 异步加载来提高你的网站速度 \n或者：\n优化 Google Analytics 异步加载来提高你的网站速度 \n于是我终于受不鸟了，百度了下相关的优化方案，不过都是基于后端的。像我这种只用得起虚拟主机的人来说，和我根本无缘 😥 。不久后在 Neo 的博客看到了 Google Analytics 异步优化方案 这样一篇文章，有写关于php主机的优化教程，于是就顺便拿来用了，恩，完美解决了这个问题。\n Google Analytics 异步方案的必要性 虽然现在 Google Analytics 的 www.google-analytics.com 和 ssl.google-analytics.com 已经重新解析回谷歌在国内那 200 多台服务器了，所以 Google Analytics 已经不用再担心被墙而导致网站加载慢和无法采集到数据的问题了。\n然而，浏览器端经常有意无意的，包括常见的 Ad­block 扩展等自带的屏蔽列表，利用 user­script 等方式，屏蔽 Google An­a­lyt­ics。这导致了数据统计不准的问题。\n在 JerryQu 的 《本博客零散优化点汇总》 一文中提到他是如何处理 Google Analytics 的：\n 把统计逻辑挪到了服务端；自己生成用户唯一标识，获取访问页面的标题、URL、Referer，获取用户 IP 和浏览器 UA，随着每次访问发给 Google 的统计地址。服务端向 Google 发起的请求是异步的，用户端访问速度丝毫不受影响。\n Google Analytics 的 官方文档 给出了相关介绍，Google 也提供了 Measurement Protocol。\nGoogle Analytics 异步方案介绍 目前常见的是这两种方法：完整的后端方案和前端和后端搭配的方案。\n 前者通过配置 Nginx，使用 uid 模块和 proxy_pass 向后端转发请求；后者的方案则是通过 JS 发送请求给中转服务，再由中转服务器异步发送给 Google。对于前者的解决方案的实现可以阅读下述文章：\n  《Ng­inx 内配置 Google An­a­lyt­ics 指南》 《使用 Nginx 将请求转发至 Google Analytics 实现后端统计》  还有一种方案，就是在前端通过 JS 发起一个请求、生成用户端的信息带到请求的 URI 上，然后后端的有关程序监听这个请求，并异步发送给 Google。\n 对于这种解决方案，有人写了一个 Node.js（基于 ThinkJS） 的程序实现：《服务端使用 Google Analytics》\n PHP 的轮子 {#PHP- 的轮子} 我想，没有 Node.js 支持的虚拟主机，又不是所有人都有独立的 VPS 的，也不是所有人都使用 Node.js 的。所以我根据这种思路，找到了个 PHP 版的。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  \u0026lt;?php // ******************** // * Author: stneng // * Date: 2016.12.11 // * Introduction: https://u.nu/ytq // *********************  header(\u0026#34;status: 204\u0026#34;); header(\u0026#34;Cache-Control: no-cache, max-age=0\u0026#34;); header(\u0026#34;Pragma: no-cache\u0026#34;); $tid=\u0026#39;\u0026#39;; // 在这里写 Google Analytics 给的 tid，形如：UA-XXXX-Y  function create_uuid(){$str = md5(uniqid(mt_rand(), true)); $uuid = substr($str,0,8) . \u0026#39;-\u0026#39;; $uuid .= substr($str,8,4) . \u0026#39;-\u0026#39;; $uuid .= substr($str,12,4) . \u0026#39;-\u0026#39;; $uuid .= substr($str,16,4) . \u0026#39;-\u0026#39;; $uuid .= substr($str,20,12); return $uuid; } if (!isset($_COOKIE[\u0026#34;uuid\u0026#34;])) {$uuid=create_uuid(); setcookie(\u0026#34;uuid\u0026#34;, $uuid , time()+368400000); }else{$uuid=$_COOKIE[\u0026#34;uuid\u0026#34;]; } if (function_exists(\u0026#34;fastcgi_finish_request\u0026#34;)) {fastcgi_finish_request(); // 对于 fastcgi 会提前返回请求结果，提高响应速度。  } $url=\u0026#39;v=1\u0026amp;t=pageview\u0026amp;\u0026#39;; $url.=\u0026#39;tid=\u0026#39;.$tid.\u0026#39;\u0026amp;\u0026#39;; $url.=\u0026#39;cid=\u0026#39;.$uuid.\u0026#39;\u0026amp;\u0026#39;; $url.=\u0026#39;dl=\u0026#39;.rawurlencode(rawurldecode($_SERVER[\u0026#39;HTTP_REFERER\u0026#39;])).\u0026#39;\u0026amp;\u0026#39;; $url.=\u0026#39;uip=\u0026#39;.rawurlencode(rawurldecode($_SERVER[\u0026#39;REMOTE_ADDR\u0026#39;])).\u0026#39;\u0026amp;\u0026#39;; $url.=\u0026#39;ua=\u0026#39;.rawurlencode(rawurldecode($_SERVER[\u0026#39;HTTP_USER_AGENT\u0026#39;])).\u0026#39;\u0026amp;\u0026#39;; $url.=\u0026#39;dt=\u0026#39;.rawurlencode(rawurldecode($_GET[\u0026#39;dt\u0026#39;])).\u0026#39;\u0026amp;\u0026#39;; $url.=\u0026#39;dr=\u0026#39;.rawurlencode(rawurldecode($_GET[\u0026#39;dr\u0026#39;])).\u0026#39;\u0026amp;\u0026#39;; $url.=\u0026#39;ul=\u0026#39;.rawurlencode(rawurldecode($_GET[\u0026#39;ul\u0026#39;])).\u0026#39;\u0026amp;\u0026#39;; $url.=\u0026#39;sd=\u0026#39;.rawurlencode(rawurldecode($_GET[\u0026#39;sd\u0026#39;])).\u0026#39;\u0026amp;\u0026#39;; $url.=\u0026#39;sr=\u0026#39;.rawurlencode(rawurldecode($_GET[\u0026#39;sr\u0026#39;])).\u0026#39;\u0026amp;\u0026#39;; $url.=\u0026#39;vp=\u0026#39;.rawurlencode(rawurldecode($_GET[\u0026#39;vp\u0026#39;])).\u0026#39;\u0026amp;\u0026#39;; $url.=\u0026#39;z=\u0026#39;.$_GET[\u0026#39;z\u0026#39;]; $url=\u0026#39;https://www.google-analytics.com/collect?\u0026#39;.$url; $ch=curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_exec($ch); curl_close($ch); ?\u0026gt;   将上述代码保存为 ga.php，放在网站根目录。\n 当然你也可以命名为其它的，不过你需要修改下述提到的 script。\n 在页面中插入下述代码：\n1  \u0026lt;script\u0026gt;!function(e,n,o){var t=e.screen,a=encodeURIComponent,r=[\u0026#34;dt=\u0026#34;+a(n.title),\u0026#34;dr=\u0026#34;+a(n.referrer),\u0026#34;ul=\u0026#34;+(o.language||o.browserLanguage),\u0026#34;sd=\u0026#34;+t.colorDepth+\u0026#34;-bit\u0026#34;,\u0026#34;sr=\u0026#34;+t.width+\u0026#34;x\u0026#34;+t.height,\u0026#34;vp=\u0026#34;+e.innerWidth+\u0026#34;x\u0026#34;+e.innerHeight,\u0026#34;z=\u0026#34;+ +new Date],i=\u0026#34;?\u0026#34;+r.join(\u0026#34;\u0026amp;\u0026#34;);e.__beacon_img=new Image,e.__beacon_img.src=\u0026#34;/ga.php\u0026#34;+i}(window,document,navigator,location);\u0026lt;/script\u0026gt;   上面这段代码是直接修改自 imququ.com 的 ana_js\n屈哥在 Disqus 把他这部分 javascript 的源码给了我，如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  (function(window, document, navigator, location) { var screen = window.screen; var encode = encodeURIComponent; var data = [\u0026#39;dt=\u0026#39; + encode(document.title), \u0026#39;dr=\u0026#39; + encode(document.referrer), \u0026#39;ul=\u0026#39; + (navigator.language || navigator.browserLanguage), \u0026#39;sd=\u0026#39; + screen.colorDepth + \u0026#39;-bit\u0026#39;, \u0026#39;sr=\u0026#39; + screen.width + \u0026#39;x\u0026#39; + screen.height, \u0026#39;_=\u0026#39; + (+new Date) ]; var query = \u0026#39;?\u0026#39; + data.join(\u0026#39;\u0026amp;\u0026#39;); window.__beacon_img = new Image(); window.__beacon_img.src = \u0026#39;/ga.php\u0026#39; + query; })(window, document, navigator, location);   这段 JS 代码完成了 URI 生成和发起请求两个操作。\n后端 PHP 程序包含了 uuid 生成、cookie 校验和转发请求三个部分。\n首先是用 md5 生成符合 Google Analytics 的唯一用户 uid，作为辨别不同用户的依据。\n然后会从客户端的 cookie 来进行匹配，判断是否是回访的访客。如果客户端没有相关 cookie，这个请求就会把 uuid 写进用户端的 cookie 中。\n然后就是解析 URI，通过请求采集请求的 URI 获取有关信息，然后组成 www.google-analytics.com/collect 适用的 URI。\n最后就是服务端通过发起 cURL 请求 www.google-analytics.com，把统计的页面行为提交给 Google 即可。\n 上述代码你可以在 我的 gist 中下载。\n 异步方案的性能分析  优化 Google Analytics 异步加载来提高你的网站速度 \n上图上半部分是使用 Google Analytics 的 Tracker Code 的前端响应速度，下半部分是我使用 PHP 程序异步的 Google Analytics 统计的性能表现。\n 使用 https://blog.viosey.com 和 https://blog.nfz.moe 做的测试。\n 使用 Google Analytics 的 Tracker Code 需要加载一个大小 30k 左右的脚本（可被缓存），整个统计需要花费 90ms 左右（还不包括中间异步等待时的时间）。使用我的异步统计方案大概需要 85ms – 100ms。虽然速度相差无几，但是异步方案无需加载 JS，而且如果主机性能能再好一些，后端 PHP 运行速度再快一些，完全可以将时间控制在 50ms 以内。\n 转载自： neoFelhz’s Blog—Google Analytics 异步优化方案\n","date":"2017年07月07日","permalink":"/2017/07/13/916.html/","title":"优化 Google Analytics 异步加载来提高你的网站速度"},{"content":"最近准备开始写日记，可是又不知道用什么样的程序好，Wordpress用的都想吐了，hexo等又不习惯，于是盯上了我一直很青睐的Ghost，刚好树莓派还在那一直挂着，不如拿来利用一下 😎\nPS：如果你的脸不是太黑的话，顺着敲代码肯定能搭建出来的\n环境：Debian8\n设备：树莓派3B\n安装NodeJs 来自：Weic`s Blog\n切换到root账户\nsu root\n卸载自带Node\napt-get remove nodejs nodered\n卸载完后可能会提示还有不需要的包，需要输入下面命令卸载\napt-get autoremove\n卸载完查下看能不能输出Node版本信息\nnode -v\n如果没有输出版本信息就说明卸载完了，下面我们安装我们自己的Node\n首先定一个安装位置，我们这里以 /usr 目录为例\ncd /usr\n下载编译好的Node\nwget https://npm.taobao.org/dist/v4.6.2/node-v4.6.2-linux-armv6l.tar.gz\n链接node和npm\nln -s /usr/node-v4.6.2-linux-armv6l/bin/node /usr/local/bin/node\nln -s /usr/node-v4.6.2-linux-armv6l/bin/npm /usr/local/bin/npm\n现在查看node和npm版本\nnode -v \u0026amp;\u0026amp; npm -v\n如果有输出版本信息则表示安装完成,如下图：\n Respbian安装NodeJs并搭建Ghost \n更改npm源\n如果你的服务器是在国外，请忽略此步骤；但如果服务器在国内的话想都不用想继续往下看：\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\nln -s /usr/node-4.6.2/bin/cnpm /usr/local/bin/cnpm\n安装lamp 安装Nginx\napt-get install nginx\n安装mysql,php,phpmyadmin \u0026lt;–如果你要用mysql而不是sqlite的话\napt-get install mysql-server php5 php5-mysql phpmyadmin\n链接phpmyadmin\nln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin\n给网站目录权限\nchmod -R 777 /var/www/html\n重启服务\nphp5enmod mcrypt\nservice php5-fpm restart\n安装Ghost 进入home目录\ncd /home\n新建一个文件夹\nmkdir ghost\n下载最新版本的ghost\nwget https://ghost.org/zip/ghost-latest.zip\n解压文件\nunzip -d ghost ghost-latest.zip\n进入安装目录\ncd ghost/\n进行安装\nnpm install --production\n配置ghost 复制config.example.js 并命名为config.js cp config.example.js config.js\n按照以下说明进行修改 vi config.js\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  config = { // ### Production // When running Ghost in the wild, use the production environment // Configure your URL and mail settings here production: { url: \u0026#39;http://my-ghost-blog.com\u0026#39;, #将‘ ’内部的内容修改为你的解析后的域名，注意带上http mail: {}, database: { client: \u0026#39;mysql\u0026#39;, connection: { host : \u0026#39;127.0.0.1\u0026#39;, user : \u0026#39;root\u0026#39;, password : \u0026#39;\u0026#39;, database : \u0026#39;ghost\u0026#39;, charset : \u0026#39;utf8\u0026#39; } }, server: { // Host to be passed to node\u0026#39;s `net.Server#listen()` host: \u0026#39;127.0.0.1\u0026#39;, #将‘127.0.0.1’改为‘0.0.0.0’ // Port to be passed to node\u0026#39;s `net.Server#listen()`, for iisnode s$ port: \u0026#39;2368\u0026#39; } },(...)   然后\n后台运行 emmm…可以用PM2之类的软件，不过我还是喜欢新建一个screen窗口，看个人喜好吧\n使用PM2让Ghost永远在线\n首先进到ghost的安装目录，之后安装PM2\nnpm install pm2 -g\n链接PM2 ln -s /usr/node-v4.6.2-linux-armv6l/bin/pm2 /usr/bin\n让ghost以production模式运作，指定程序的入口index.js，并且此进程命名为ghost\nNODE_ENV=production pm2 start index.js --name \u0026quot;ghost\u0026quot;\n开机启动\npm2 startup\npm2 save\n","date":"2017年07月07日","permalink":"/2017/07/10/903.html/","title":"Respbian安装NodeJs并搭建Ghost"},{"content":"整理了一些实用的 wordpress 增强功能及优化代码，分次写文章的话感觉太水了，于是就整合在了一起\n纯代码使用SMTP发邮件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  //使用smtp发邮件 function mail_smtp( $phpmailer ) { $phpmailer-\u0026amp;gt;IsSMTP(); $phpmailer-\u0026amp;gt;SMTPAuth = true;//启用SMTPAuth服务  $phpmailer-\u0026amp;gt;Port = 465;//MTP邮件发送端口，这个和下面的对应，如果这里填写25，则下面为空白  $phpmailer-\u0026amp;gt;SMTPSecure =“ssl”;//是否验证 ssl，这个和上面的对应，如果不填写，则上面的端口须为25  $phpmailer-\u0026amp;gt;Host = “smtp.qq.com”;//邮箱的SMTP服务器地址，如果是QQ的则为：smtp.exmail.qq.com  $phpmailer-\u0026amp;gt;Username = “admin@ashuwp.com”;//你的邮箱地址  $phpmailer-\u0026amp;gt;Password =“********”;//你的邮箱登陆密码 } add_action(‘phpmailer_init’, ‘mail_smtp’); //下面这个很重要，得将发件地址改成和上面smtp邮箱一致才行。 function ashuwp_wp_mail_from( $original_email_address ) { return ‘admin@ashuwp.com’; } add_filter( ‘wp_mail_from’, ‘ashuwp_wp_mail_from’ );   来自：Javst\nwordpress评论调用qq头像 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  //Gravatar头像 function get_avatar_javst($avatar) { $protocol=is_ssl()?\u0026#39;https\u0026#39;:\u0026#39;http\u0026#39;; $qqmail = trim(get_comment($parent_id)-\u0026amp;gt;comment_author_email); if(strpos($qqmail,\u0026#39;@qq.com\u0026#39;)){ $avatar_source=\u0026#39;q.qlogo.cn\u0026#39;; $img=\u0026#39;g?b=qq\u0026amp;nk=\u0026#39;.preg_replace(\u0026#39;/@qq.com/\u0026#39;,\u0026#39;\u0026#39;,$qqmail).\u0026#39;\u0026amp;s=100\u0026#39;;} else{ $avatar_source=\u0026#39;cn.gravatar.com\u0026#39;; $img=\u0026#39;avatar/$1?s=$2\u0026#39;; } $avatar = preg_replace(\u0026#39;/.*\\/avatar\\/(.*)\\?s=([\\d]+)\u0026amp;amp;.*/\u0026#39;,\u0026#39;\u0026amp;lt; data-src=\u0026#34;\u0026#39;.$protocol.\u0026#39;://\u0026#39;.$avatar_source.\u0026#39;/\u0026#39;.$img.\u0026#39;\u0026#34; title=\u0026#34;wordpress 功能增强及优化\u0026#34;/\u0026amp;gt;\u0026#39;,$avatar); return $avatar; } add_filter(\u0026#39;get_avatar\u0026#39;, \u0026#39;get_avatar_javst\u0026#39;);   来自：Javst\n上传附件自动以日期方式重命名 1 2 3 4 5 6 7  //WordPress上传文件重命名 function git_upload_filter($file) { $time = date(\u0026#34;YmdHis\u0026#34;); $file[\u0026#39;name\u0026#39;] = $time . \u0026#34;\u0026#34; . mt_rand(1, 100) . \u0026#34;.\u0026#34; . pathinfo($file[\u0026#39;name\u0026#39;], PATHINFO_EXTENSION); return $file; } add_filter(\u0026#39;wp_handle_upload_prefilter\u0026#39;, \u0026#39;git_upload_filter\u0026#39;);   来自：MikuBlog\n彻底禁止wordpress自动裁剪缩略图功能 1 2  //彻底禁止WordPress缩略图 add_filter( \u0026#39;add_image_size\u0026#39;, create_function( \u0026#39;\u0026#39;, \u0026#39;return 1;\u0026#39; ) );   然后打开WordPress上帝模式(/wp-admin/options.php)，Ctrl+F搜索medium_large_size_w ，将其值改为 0\n全站https 1 2 3 4 5 6 7 8  /*全站资源https*/ function replacehttp($content){ if( is_ssl() ){ $content = str_replace(\u0026#39;http://imiku.me/wp-content/uploads\u0026#39;, \u0026#39;https://imiku.me/wp-content/uploads\u0026#39;, $content); } return $content; } add_filter(\u0026#39;the_content\u0026#39;, \u0026#39;replacehttp\u0026#39;);   Gravatar头像使用中国服务器 1 2 3 4 5 6  /* Gravatar头像使用中国服务器*/ function gravatar_cn( $url ){ $gravatar_url = array(\u0026#39;0.gravatar.com\u0026#39;,\u0026#39;1.gravatar.com\u0026#39;,\u0026#39;2.gravatar.com\u0026#39;); return str_replace( $gravatar_url, \u0026#39;cdn.v2ex.com/gravatar\u0026#39;, $url ); } add_filter( \u0026#39;get_avatar_url\u0026#39;, \u0026#39;gravatar_cn\u0026#39;, 4 );   阻止文章内相互pingback 1 2 3 4 5 6 7 8  /*阻止站内文章互相Pingback */ function theme_noself_ping( \u0026amp;$links ) { $home = get_option( \u0026#39;home\u0026#39; ); foreach ( $links as $l =\u0026amp;gt; $link ) if ( 0 === strpos( $link, $home ) ) unset($links[$l]); } add_action(\u0026#39;pre_ping\u0026#39;,\u0026#39;theme_noself_ping\u0026#39;);   删除部分自带的小工具 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  /*删除自带小工具*/ function unregister_default_widgets() { unregister_widget(\u0026#34;WP_Widget_Pages\u0026#34;); unregister_widget(\u0026#34;WP_Widget_Calendar\u0026#34;); unregister_widget(\u0026#34;WP_Widget_Archives\u0026#34;); unregister_widget(\u0026#34;WP_Widget_Links\u0026#34;); unregister_widget(\u0026#34;WP_Widget_Meta\u0026#34;); unregister_widget(\u0026#34;WP_Widget_Search\u0026#34;); unregister_widget(\u0026#34;WP_Widget_Text\u0026#34;); unregister_widget(\u0026#34;WP_Widget_Categories\u0026#34;); unregister_widget(\u0026#34;WP_Widget_Recent_Posts\u0026#34;); unregister_widget(\u0026#34;WP_Widget_Recent_Comments\u0026#34;); unregister_widget(\u0026#34;WP_Widget_RSS\u0026#34;); unregister_widget(\u0026#34;WP_Widget_Tag_Cloud\u0026#34;); unregister_widget(\u0026#34;WP_Nav_Menu_Widget\u0026#34;); } add_action(\u0026#34;widgets_init\u0026#34;, \u0026#34;unregister_default_widgets\u0026#34;, 11);   编辑器增强 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  /*编辑器增强*/ function enable_more_buttons($buttons) { $buttons[] = \u0026#39;hr\u0026#39;; $buttons[] = \u0026#39;del\u0026#39;; $buttons[] = \u0026#39;sub\u0026#39;; $buttons[] = \u0026#39;sup\u0026#39;; $buttons[] = \u0026#39;fontselect\u0026#39;; $buttons[] = \u0026#39;fontsizeselect\u0026#39;; $buttons[] = \u0026#39;cleanup\u0026#39;; $buttons[] = \u0026#39;styleselect\u0026#39;; $buttons[] = \u0026#39;wp_page\u0026#39;; $buttons[] = \u0026#39;anchor\u0026#39;; $buttons[] = \u0026#39;backcolor\u0026#39;; return $buttons; } add_filter(\u0026#34;mce_buttons_3\u0026#34;, \u0026#34;enable_more_buttons\u0026#34;);   评论邮件回复 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  /*评论邮件回复*/ function comment_mail_notify($comment_id){ $mail_user_name = akina_option(\u0026#39;mail_user_name\u0026#39;) ? akina_option(\u0026#39;mail_user_name\u0026#39;) : \u0026#39;poi\u0026#39;; $comment = get_comment($comment_id); $parent_id = $comment-\u0026amp;gt;comment_parent ? $comment-\u0026amp;gt;comment_parent : \u0026#39;\u0026#39;; $spam_confirmed = $comment-\u0026amp;gt;comment_approved; if(($parent_id != \u0026#39;\u0026#39;) \u0026amp;\u0026amp; ($spam_confirmed != \u0026#39;spam\u0026#39;)){ $wp_email = $mail_user_name . \u0026#39;@\u0026#39; . preg_replace(\u0026#39;#^www\\.#\u0026#39;, \u0026#39;\u0026#39;, strtolower($_SERVER[\u0026#39;SERVER_NAME\u0026#39;])); $to = trim(get_comment($parent_id)-\u0026amp;gt;comment_author_email); $subject = \u0026#39;你在 [\u0026#39; . get_option(\u0026#34;blogname\u0026#34;) . \u0026#39;] 的留言有了回应\u0026#39;; $message = \u0026#39; \u0026amp;lt;table border=\u0026#34;1\u0026#34; cellpadding=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; width=\u0026#34;600\u0026#34; align=\u0026#34;center\u0026#34; style=\u0026#34;border-collapse: collapse; border-style: solid; border-width: 1;border-color:#ddd;\u0026#34;\u0026amp;gt; \u0026amp;lt;tbody\u0026amp;gt; \u0026amp;lt;tr\u0026amp;gt; \u0026amp;lt;td\u0026amp;gt; \u0026amp;lt;table align=\u0026#34;center\u0026#34; border=\u0026#34;0\u0026#34; cellpadding=\u0026#34;0\u0026#34; cellspacing=\u0026#34;0\u0026#34; width=\u0026#34;600\u0026#34; height=\u0026#34;48\u0026#34; \u0026amp;gt; \u0026amp;lt;tbody\u0026amp;gt;\u0026amp;lt;tr\u0026amp;gt; \u0026amp;lt;td width=\u0026#34;100\u0026#34; align=\u0026#34;center\u0026#34; style=\u0026#34;border-right:1px solid #ddd;\u0026#34;\u0026amp;gt; \u0026amp;lt;a href=\u0026#34;\u0026#39;.home_url().\u0026#39;/\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026amp;gt;\u0026#39;. get_option(\u0026#34;blogname\u0026#34;) .\u0026#39;\u0026amp;lt;/a\u0026amp;gt;\u0026amp;lt;/td\u0026amp;gt; \u0026amp;lt;td width=\u0026#34;300\u0026#34; style=\u0026#34;padding-left:20px;\u0026#34;\u0026amp;gt;\u0026amp;lt;strong\u0026amp;gt;您有一条来自 \u0026amp;lt;a href=\u0026#34;\u0026#39;.home_url().\u0026#39;\u0026#34; target=\u0026#34;_blank\u0026#34; style=\u0026#34;color:#6ec3c8;text-decoration:none;\u0026#34;\u0026amp;gt;\u0026#39; . get_option(\u0026#34;blogname\u0026#34;) . \u0026#39;\u0026amp;lt;/a\u0026amp;gt; 的回复\u0026amp;lt;/strong\u0026amp;gt;\u0026amp;lt;/td\u0026amp;gt; \u0026amp;lt;/tr\u0026amp;gt; \u0026amp;lt;/tbody\u0026amp;gt; \u0026amp;lt;/table\u0026amp;gt; \u0026amp;lt;/td\u0026amp;gt; \u0026amp;lt;/tr\u0026amp;gt; \u0026amp;lt;tr\u0026amp;gt; \u0026amp;lt;td style=\u0026#34;padding:15px;\u0026#34;\u0026amp;gt;\u0026amp;lt;p\u0026amp;gt;\u0026amp;lt;strong\u0026amp;gt;\u0026#39; . trim(get_comment($parent_id)-\u0026amp;gt;comment_author) . \u0026#39;\u0026amp;lt;/strong\u0026amp;gt;, 你好!\u0026amp;lt;/span\u0026amp;gt; \u0026amp;lt;p\u0026amp;gt;你在《\u0026#39; . get_the_title($comment-\u0026amp;gt;comment_post_ID) . \u0026#39;》的留言:\u0026amp;lt;/p\u0026amp;gt;\u0026amp;lt;p style=\u0026#34;border-left:3px solid #ddd;padding-left:1rem;color:#999;\u0026#34;\u0026amp;gt;\u0026#39; . trim(get_comment($parent_id)-\u0026amp;gt;comment_content) . \u0026#39;\u0026amp;lt;/p\u0026amp;gt;\u0026amp;lt;p\u0026amp;gt; \u0026#39; . trim($comment-\u0026amp;gt;comment_author) . \u0026#39; 给你的回复:\u0026amp;lt;/p\u0026amp;gt;\u0026amp;lt;p style=\u0026#34;border-left:3px solid #ddd;padding-left:1rem;color:#999;\u0026#34;\u0026amp;gt;\u0026#39; . trim($comment-\u0026amp;gt;comment_content) . \u0026#39;\u0026amp;lt;/p\u0026amp;gt; \u0026amp;lt;center \u0026amp;gt;\u0026amp;lt;a href=\u0026#34;\u0026#39; . htmlspecialchars(get_comment_link($parent_id)) . \u0026#39;\u0026#34; target=\u0026#34;_blank\u0026#34; style=\u0026#34;background-color:#6ec3c8; border-radius:10px; display:inline-block; color:#fff; padding:15px 20px 15px 20px; text-decoration:none;margin-top:20px; margin-bottom:20px;\u0026#34;\u0026amp;gt;点击查看完整内容\u0026amp;lt;/a\u0026amp;gt;\u0026amp;lt;/center\u0026amp;gt; \u0026amp;lt;/td\u0026amp;gt; \u0026amp;lt;/tr\u0026amp;gt; \u0026amp;lt;tr\u0026amp;gt; \u0026amp;lt;td align=\u0026#34;center\u0026#34; valign=\u0026#34;center\u0026#34; height=\u0026#34;38\u0026#34; style=\u0026#34;font-size:0.8rem; color:#999;\u0026#34;\u0026amp;gt;Copyright © \u0026#39;.get_option(\u0026#34;blogname\u0026#34;).\u0026#39;\u0026amp;lt;/td\u0026amp;gt; \u0026amp;lt;/tr\u0026amp;gt; \u0026amp;lt;/tbody\u0026amp;gt; \u0026amp;lt;/table\u0026amp;gt;\u0026#39;; $from = \u0026#34;From: \\\u0026#34;\u0026#34; . get_option(\u0026#39;blogname\u0026#39;) . \u0026#34;\\\u0026#34;\u0026amp;lt;$wp_email\u0026amp;gt;\u0026#34;; $headers = \u0026#34;$from\\nContent-Type: text/html; charset=\u0026#34; . get_option(\u0026#39;blog_charset\u0026#39;) . \u0026#34;\\n\u0026#34;; wp_mail( $to, $subject, $message, $headers ); } } add_action(\u0026#39;comment_post\u0026#39;, \u0026#39;comment_mail_notify\u0026#39;);   wordpress自动推送文章到百度 1 2 3 4 5 6 7 8 9 10 11 12 13 14  add_action(\u0026#39;save_post\u0026#39;, \u0026#39;wpjam_save_post_notify_baidu_zz\u0026#39;, 10, 3); function wpjam_save_post_notify_baidu_zz($post_id, $post, $update){ if($post-\u0026amp;gt;post_status != \u0026#39;publish\u0026#39;) return; $baidu_zz_api_url\t= \u0026#39;http://data.zz.baidu.com/urls?site=your_site_url\u0026amp;token=your_token\u0026#39;; //请到百度站长后台获取你的站点的专属提交链接 \t$response\t= wp_remote_post($baidu_zz_api_url, array( \u0026#39;headers\u0026#39;\t=\u0026amp;gt; array(\u0026#39;Accept-Encoding\u0026#39;=\u0026amp;gt;\u0026#39;\u0026#39;,\u0026#39;Content-Type\u0026#39;=\u0026amp;gt;\u0026#39;text/plain\u0026#39;), \u0026#39;sslverify\u0026#39;\t=\u0026amp;gt; false, \u0026#39;blocking\u0026#39;\t=\u0026amp;gt; false, \u0026#39;body\u0026#39;\t=\u0026amp;gt; get_permalink($post_id) )); }   来自：Javst\n去除头部多余代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  remove_action( \u0026#39;wp_head\u0026#39;, \u0026#39;wp_enqueue_scripts\u0026#39;, 1 ); //Javascript的调用 remove_action( \u0026#39;wp_head\u0026#39;, \u0026#39;feed_links\u0026#39;, 2 ); //移除feed remove_action( \u0026#39;wp_head\u0026#39;, \u0026#39;feed_links_extra\u0026#39;, 3 ); //移除feed remove_action( \u0026#39;wp_head\u0026#39;, \u0026#39;rsd_link\u0026#39; ); //移除离线编辑器开放接口 remove_action( \u0026#39;wp_head\u0026#39;, \u0026#39;wlwmanifest_link\u0026#39; ); //移除离线编辑器开放接口 remove_action( \u0026#39;wp_head\u0026#39;, \u0026#39;index_rel_link\u0026#39; );//去除本页唯一链接信息 remove_action(\u0026#39;wp_head\u0026#39;, \u0026#39;parent_post_rel_link\u0026#39;, 10, 0 );//清除前后文信息 remove_action(\u0026#39;wp_head\u0026#39;, \u0026#39;start_post_rel_link\u0026#39;, 10, 0 );//清除前后文信息 remove_action( \u0026#39;wp_head\u0026#39;, \u0026#39;adjacent_posts_rel_link_wp_head\u0026#39;, 10, 0 ); remove_action( \u0026#39;wp_head\u0026#39;, \u0026#39;locale_stylesheet\u0026#39; ); remove_action(\u0026#39;publish_future_post\u0026#39;,\u0026#39;check_and_publish_future_post\u0026#39;,10, 1 ); remove_action( \u0026#39;wp_head\u0026#39;, \u0026#39;noindex\u0026#39;, 1 ); remove_action( \u0026#39;wp_head\u0026#39;, \u0026#39;wp_print_styles\u0026#39;, 8 );//载入css remove_action( \u0026#39;wp_head\u0026#39;, \u0026#39;wp_print_head_scripts\u0026#39;, 9 ); remove_action( \u0026#39;wp_head\u0026#39;, \u0026#39;wp_generator\u0026#39; ); //移除WordPress版本 remove_action( \u0026#39;wp_head\u0026#39;, \u0026#39;rel_canonical\u0026#39; ); remove_action( \u0026#39;wp_footer\u0026#39;, \u0026#39;wp_print_footer_scripts\u0026#39; ); remove_action( \u0026#39;wp_head\u0026#39;, \u0026#39;wp_shortlink_wp_head\u0026#39;, 10, 0 ); remove_action( \u0026#39;template_redirect\u0026#39;, \u0026#39;wp_shortlink_header\u0026#39;, 11, 0 ); add_action(\u0026#39;widgets_init\u0026#39;, \u0026#39;my_remove_recent_comments_style\u0026#39;); function my_remove_recent_comments_style() { global $wp_widget_factory; remove_action(\u0026#39;wp_head\u0026#39;, array($wp_widget_factory-\u0026amp;gt;widgets[\u0026#39;WP_Widget_Recent_Comments\u0026#39;] ,\u0026#39;recent_comments_style\u0026#39;));   增加 markdown 功能到后台编辑器  下载 marked.js 和 makemarkdown.js 文件 点击下载 将 marked.js，makemarked.js 拷贝到 ~\\wp-content{你的主题目录}\\js\\ 目录下 marked.js 是一套 js 库，用于将 markdown 代码转换成 html。makemarked.js 用于监听文本框事件，来实时调用 marked.js 来转换 markdown 代码。 在 functions.php 中加入以下代码  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  // 增加 markdown 功能到后台编辑器 add_action( \u0026#39;admin_menu\u0026#39;, \u0026#39;create_markdown\u0026#39; ); add_action( \u0026#39;save_post\u0026#39;, \u0026#39;save_markdown\u0026#39;, 10, 2 ); function create_markdown() { add_meta_box( \u0026#39;markdown_box\u0026#39;, \u0026#39;Markdown\u0026#39;, \u0026#39;markdown_html\u0026#39;, \u0026#39;post\u0026#39;, \u0026#39;normal\u0026#39;, \u0026#39;high\u0026#39; ); } function markdown_html( $object, $box ) { ?\u0026gt; \u0026lt;textarea name=\u0026#34;markdown\u0026#34; id=\u0026#34;markdown\u0026#34; cols=\u0026#34;60\u0026#34; oninput =\u0026#34;markdownEditorChanged()\u0026#34; rows=\u0026#34;50\u0026#34; style=\u0026#34;width: 100%; height:100%\u0026#34;\u0026gt;\u0026lt;?php echo htmlspecialchars (get_post_meta( $object-\u0026gt;ID, \u0026#39;markdown\u0026#39;, true )); ?\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;?php } function save_markdown( $post_id, $post ) { if ( !current_user_can( \u0026#39;edit_post\u0026#39;, $post_id ) ) return $post_id; $meta_value = get_post_meta( $post_id, \u0026#39;markdown\u0026#39;, true ); $new_meta_value = $_POST[\u0026#39;markdown\u0026#39;]; if ( $new_meta_value \u0026amp;\u0026amp; \u0026#39;\u0026#39; == $meta_value ) add_post_meta( $post_id, \u0026#39;markdown\u0026#39;, $new_meta_value, true ); elseif ( $new_meta_value != $meta_value ) update_post_meta( $post_id, \u0026#39;markdown\u0026#39;, $new_meta_value ); elseif ( \u0026#39;\u0026#39; == $new_meta_value \u0026amp;\u0026amp; $meta_value ) delete_post_meta( $post_id, \u0026#39;markdown\u0026#39;, $meta_value ); } function markdown_script() { wp_enqueue_script(\u0026#39;markdown\u0026#39;, get_template_directory_uri() . \u0026#39;/js/marked.js\u0026#39; ); wp_enqueue_script(\u0026#39;makemarkdown\u0026#39;, get_template_directory_uri() . \u0026#39;/js/makemarkdown.js\u0026#39;); } add_action( \u0026#39;admin_enqueue_scripts\u0026#39;, \u0026#39;markdown_script\u0026#39;);   停用自动保存和修订版本功能 1 2 3 4 5 6 7  //禁止wptexturize函数 remove_filter(\u0026#39;the_content\u0026#39;, \u0026#39;wptexturize\u0026#39;); remove_action(\u0026#39;pre_post_update\u0026#39;, \u0026#39;wp_save_post_revision\u0026#39; ); add_action( \u0026#39;wp_print_scripts\u0026#39;, \u0026#39;disable_autosave\u0026#39; ); function disable_autosave() { wp_deregister_script(\u0026#39;autosave\u0026#39;); }   文章添加彩色美化框 1 2 3 4 5 6 7 8 9 10 11  /*短代码信息框 开始*/ function toz($atts, $content=null){ return \u0026#39; \u0026amp;lt;div id=\u0026#34;sc_notice\u0026#34;\u0026amp;gt;\u0026#39;.$content.\u0026#39;\u0026amp;lt;/div\u0026amp;gt; \u0026#39;; } add_shortcode(\u0026#39;v_notice\u0026#39;,\u0026#39;toz\u0026#39;); function toa($atts, $content=null){ return \u0026#39; \u0026amp;lt;div id=\u0026#34;sc_error\u0026#34;\u0026amp;gt;\u0026#39;.$content.\u0026#39;\u0026amp;lt;/div\u0026amp;gt; \u0026#39;; } add_shortcode(\u0026#39;v_error\u0026#39;,\u0026#39;toa\u0026#39;); function toc($atts, $content=null){ return \u0026#39; \u0026amp;lt;div id=\u0026#34;sc_warn\u0026#34;\u0026amp;gt;\u0026#39;.$content.\u0026#39;\u0026amp;lt;/div\u0026amp;gt; \u0026#39;; } add_shortcode(\u0026#39;v_warn\u0026#39;,\u0026#39;toc\u0026#39;); function tob($atts, $content=null){ return \u0026#39; \u0026amp;lt;div id=\u0026#34;sc_tips\u0026#34;\u0026amp;gt;\u0026#39;.$content.\u0026#39;\u0026amp;lt;/div\u0026amp;gt; \u0026#39;; } add_shortcode(\u0026#39;v_tips\u0026#39;,\u0026#39;tob\u0026#39;); /* 短代码信息框 完毕*/   css里添加\n1 2 3 4 5 6 7 8 9 10 11 12  /*通知框*/ #sc_notice { color: #7da33c; background: #ecf2d6 url(\u0026#39;img/sc_notice.png\u0026#39;) -1px -1px no-repeat; border: 1px solid #aac66d; overflow: hidden; margin: 10px 0; padding: 15px 15px 15px 35px; } #sc_warn, .post-password-form { color: #ad9948; background: #fff4b9 url(\u0026#39;img/sc_warn.png\u0026#39;) -1px -1px no-repeat; border: 1px solid #eac946; overflow: hidden; margin: 10px 0; padding: 15px 15px 15px 35px; } #sc_error { color: #c66; background: #ffecea url(\u0026#39;img/sc_error.png\u0026#39;) -1px -1px no-repeat; border: 1px solid #ebb1b1; overflow: hidden; margin: 10px 0; padding: 15px 15px 15px 35px; } #sc_tips { color: #777; background: #eaeaea url(\u0026#39;img/sc_tips.png\u0026#39;) -1px -1px no-repeat; border: 1px solid #ccc; overflow: hidden; margin: 10px 0; padding: 15px 15px 15px 35px; }   在文章编辑时插入以下代码即可，注意括号修改下\n1 2 3 4  绿色提示框：{v_notice]输入文字[/v_notice} 红色提示框：{v_error]输入文字[/v_error} 黄色提示框：{v_warn]输入文字[/v_warn} 灰色提示框：{v_tips]输入文字[/v_tips}   独立页面添加.html后缀 1 2 3 4 5 6 7 8  // 页面链接添加html后缀 add_action(\u0026#39;init\u0026#39;, \u0026#39;html_page_permalink\u0026#39;, -1); function html_page_permalink() { global $wp_rewrite; if ( !strpos($wp_rewrite-\u0026amp;gt;get_page_permastruct(), \u0026#39;.html\u0026#39;)){ $wp_rewrite-\u0026amp;gt;page_structure = $wp_rewrite-\u0026amp;gt;page_structure . \u0026#39;.html\u0026#39;; } }   新窗口打开WordPress文章/页面的站外链接 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  add_filter( \u0026#39;the_content\u0026#39;, \u0026#39;cn_nf_url_parse\u0026#39;); function cn_nf_url_parse( $content ) { $regexp = \u0026#34;\u0026amp;lt;a\\s[^\u0026amp;gt;]*href=(\\\u0026#34;??)([^\\\u0026#34;\u0026amp;gt;]*?)\\\\1[^\u0026amp;gt;]*\u0026amp;gt;\u0026#34;; if(preg_match_all(\u0026#34;/$regexp/siU\u0026#34;, $content, $matches, PREG_SET_ORDER)) { if( !empty($matches) ) { $srcUrl = get_option(\u0026#39;siteurl\u0026#39;); for ($i=0; $i \u0026amp;lt; count($matches); $i++) { $tag = $matches[$i][0]; $tag2 = $matches[$i][0]; $url = $matches[$i][0]; $noFollow = \u0026#39;\u0026#39;; $pattern = \u0026#39;/target\\s*=\\s*\u0026#34;\\s*_blank\\s*\u0026#34;/\u0026#39;; preg_match($pattern, $tag2, $match, PREG_OFFSET_CAPTURE); if( count($match) \u0026amp;lt; 1 ) $noFollow .= \u0026#39; target=\u0026#34;_blank\u0026#34; \u0026#39;; $pattern = \u0026#39;/rel\\s*=\\s*\u0026#34;\\s*[n|d]ofollow\\s*\u0026#34;/\u0026#39;; preg_match($pattern, $tag2, $match, PREG_OFFSET_CAPTURE); if( count($match) \u0026amp;lt; 1 ) $noFollow .= \u0026#39; rel=\u0026#34;nofollow\u0026#34; \u0026#39;; $pos = strpos($url,$srcUrl); if ($pos === false) { $tag = rtrim ($tag,\u0026#39;\u0026amp;gt;\u0026#39;); $tag .= $noFollow.\u0026#39;\u0026amp;gt;\u0026#39;; $content = str_replace($tag2,$tag,$content); } } } } $content = str_replace(\u0026#39;]]\u0026amp;gt;\u0026#39;, \u0026#39;]]\u0026amp;gt;\u0026#39;, $content); return $content; }   用bing美图作为登录页背景图 1 2 3 4 5 6 7 8 9 10 11 12  //调用bing美图作为登录页背景图 function custom_login_head(){ $str=file_get_contents(\u0026#39;http://cn.bing.com/HPImageArchive.aspx?idx=0\u0026amp;amp;n=1\u0026#39;); if(preg_match(\u0026#34;/(.+?)\u0026amp;lt;\\/url\u0026amp;gt;/ies\u0026#34;,$str,$matches)){ $imgurl=\u0026#39;http://cn.bing.com\u0026#39;.$matches[1]; echo\u0026#39; \u0026amp;lt;style type=\u0026#34;text/css\u0026#34;\u0026amp;gt;body{background: url(\u0026#39;.$imgurl.\u0026#39;);width:100%;height:100%;background-image:url(\u0026#39;.$imgurl.\u0026#39;);-moz-background-size: 100% 100%;-o-background-size: 100% 100%;-webkit-background-size: 100% 100%;background-size: 100% 100%;-moz-border-image: url(\u0026#39;.$imgurl.\u0026#39;) 0;background-repeat:no-repeat\\9;background-image:none\\9;}\u0026amp;lt;/style\u0026amp;gt;\u0026amp;lt;/pre\u0026amp;gt; \u0026#39;; }} add_action(\u0026#39;login_head\u0026#39;, \u0026#39;custom_login_head\u0026#39;);   待更新… ","date":"2017年07月07日","permalink":"/2017/07/09/899.html/","title":"wordpress 功能增强及优化"},{"content":"用到的项目：wechat-remote itchat\n前几天发布了一篇 用 Python 简单构建微信群机器人 觉得不是很好玩，于是发现了这个项目，可以用微信远程控制树莓派aria2下载文件，还能下载YouTube视频之类的，感觉挺方便,。当然也可以在服务器上运行\naria2的部署可以参考这篇文章：利用树莓派搭建24h下载机\n由于 wechat-remote 的文档说明已经十分详细了，所以在此不做过多介绍。（下面的脚本可能会多少有些报错，不过不影响使用，反正我也不会解决 😈 ）\n 用微信控制你的树莓派远程下载文件和聊天 \n文件下载：链接: http://pan.baidu.com/s/1o7TKFxC 密码: m1he\n下载后把所有文件放到一个文件夹中，运行tll.py即可\n 使用截图：  用微信控制你的树莓派远程下载文件和聊天 \n 用微信控制你的树莓派远程下载文件和聊天 \n 用微信控制你的树莓派远程下载文件和聊天 \n 你可以将aria2的下载目录改为Nginx/Apache的网站目录，用h5ai此类的目录列表程序来查看已经下载好的文件，484贼方便 😳\n 用微信控制你的树莓派远程下载文件和聊天 \n 用微信控制你的树莓派远程下载文件和聊天 \n","date":"2017年06月06日","permalink":"/2017/06/14/854.html/","title":"用微信控制你的树莓派远程下载文件和聊天"},{"content":"普通人的小冰——请勿模仿  论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 程(lao)序(si)员(ji)们的小冰——正确玩法 :mrgreen:  论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n 论程序员的小冰和普通人的小冰 \n  现在大家应该知道小冰的正确玩法了吧，腾讯官方车，不用怕翻车 😉\n ","date":"2017年06月06日","permalink":"/2017/06/11/849.html/","title":"论程序员的小冰和普通人的小冰"},{"content":"QQ群机器人现在已经烂大街了，甚至腾讯都推出了自家的QQ机器人，相比之下，微信群聊就显得无聊许多，有时候几个星期都不一定有一个人冒泡，于是便有了这篇水文 ❓\n首先要去 http://www.tuling123.com/ 申请一个api，免费的\n准备：  Python 2/3 电脑*1（Linux，Windows不限，反正能运行Python就行） 微信*1  安装：  微信机器人用到的项目是 wxpy 官方文档说明很详细，可以根据自己的需要编写，这里只是一个简单的案例 安装 wxpy：pip install -U wxpy 如果是Linux的话还需要安装pillow依赖：pip install pillow 有时候安装pillow会出现依赖包缺失错误，需要先安装pillow依赖库：sudo apt-get install libtiff5-dev libjpeg8-dev zlib1g-dev libfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev python-tk  运行： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  # coding: utf-8 import requests from wxpy import * import json#登陆 //如果你是Linux系统在括号内添加console_qr=True bot = Bot()#图灵接口 def talks_robot(info = \u0026#39;人工智障小月\u0026#39;): api_url = \u0026#39;http://www.tuling123.com/openapi/api\u0026#39; apikey = \u0026#39;你的api\u0026#39; data = {\u0026#39;key\u0026#39;: apikey, \u0026#39;info\u0026#39;: info} req = requests.post(api_url, data=data).text replys = json.loads(req)[\u0026#39;text\u0026#39;] return replys#聊天回复 仅限群聊被@时回复，其他情况一律不回复 @bot.register([Group]) def auto_reply(msg): message = \u0026#39;{}\u0026#39;.format(msg.text) replys = talks_robot(info=message) if isinstance(msg.chat, Group) and not msg.is_at: return else : return replys#让程序保持运行 bot.start() embed()    将上面的代码另存为.py文件 可能会出错，请到百度云下载：链接：http://pan.baidu.com/s/1c8KEZk 密码：v4l3 运行后效果如下图  用 Python 简单构建微信群机器人   用 Python 简单构建微信群机器人   还有更多功能自己去发掘吧  用 Python 简单构建微信群机器人 \n","date":"2017年06月06日","permalink":"/2017/06/09/844.html/","title":"用 Python 简单构建微信群机器人"},{"content":"网页设计作品班级比赛第一名，第二名奖励，这老师挺接地气啊2333 😎  网页设计作品奖励：景品*2 \n 网页设计作品奖励：景品*2 \n 网页设计作品奖励：景品*2 \n 网页设计作品奖励：景品*2 \n","date":"2017年06月06日","permalink":"/2017/06/01/839.html/","title":"网页设计作品奖励：景品*2"},{"content":" 属下诸葛亮就要说了哦 、\n先帝想做的事情还没有做完就死了、现在天下三分、可咱们已经是遍体鳞伤了呢、\n这可真糟糕了呀。\n（摘自豆瓣）\n 什么是和式汉语 / 为什么要学习使用和式汉语 和式汉语，又称作是『日式汉语』、『日式中文』，是日语腔调的中文。/因为可爱。\n有一段话各位读者一定特别熟悉，它可以概括和式汉语的几大基本特点，请同学们声情并茂的大声朗读一遍：\n 为什么会变成这样呢……第一次有了喜欢的人。有了能做一辈子朋友的人。两件快乐事情重合在一起。而这两份快乐，又给我带来更多的快乐。得到的，本该是像梦境一般幸福的时间……但是，为什么，会变成这样呢……\n  为什么你会这么熟练啊！你和雪菜亲过多少次了啊！？你到底要把我甩开多远你才甘心啊！？\n  是我，是我先，明明都是我先来的……接吻也好，拥抱也好，还是喜欢上那家伙也好。\n  白色相簿什么的已经无所谓了。因为已经不再有歌，值得去唱了。传达不了的恋情已经不需要了。因为已经不再有人，值得去爱了。\n  从卖萌到精通 ——『和式汉语』简要入门指南 \n先别打死，我们从这几个角度来概括和式汉语的特点:\n 语法 助词、修饰、语气 日语词汇 小细节  下面稍作解释。\n 语法： 中文的正常语序是 主-谓-宾-宾语补足语\n 鲁迅是中国近代历史中白话文运动的倡导者之一。  而日语的正常语气是 主-宾-谓-颜表情，有时省略掉主语。\n 白色相簿什么的已经无所谓了、传达不了的恋情已经不需要了。 给大家唱一首歌吧 （≧Д≦）  日本人认为主语用得太多会是一种冒犯的表现，所以更多地会直接称呼对方的名字或职位或是干脆省略掉主语。\n同时也十分讲究敬语的使用。如果说话的对象是长辈，请使用敬语。\n从上面白色相簿的例子我们也可以看出，用排比或者互文的手法去委婉地反复陈述一件事情也是日语的习惯用法之一，这样很有诗意呢。\n 与你们在一起的每一天，都是我至高无上的宝贝。   助词、修饰、语气： 这是你学好和式汉语的分水岭。\n今天的天气很好 →\n 今天是很好的天气啊。（将谓语提前，并加入语气词） 今天是很好的天气呢。 今天是很好的天气的说。  注意不要滥用语气词，不然会显的很幼稚，以及我个人非常讨厌 『呐』。\n在书写和式汉语的时候，非常重要的一点就是委婉的语气。除了之前的主语的替代之外，很常见的是用表示可能性的句子。\n それはちょっと 这个有点…… それでそろそろ 差不多……  尽量不要做肯定的判断，如果要的话，坚决一点！\n这里的坚决并不是要用感叹号和强调句加深情感。试着去压抑一下自己的感情，然后通过夸张等方式厚积而薄发。日语是一门收敛情感的语言（少用感叹号）。\n 能娶到新垣结衣的人，可能上辈子拯救了一万次地球。   日语词汇： 首先讲词语的意象，有些汉语词汇是日语舶来语，或者有着强烈的和式象征意义，看到这些词汇，你首先想到的可能就是日本文化了：\n 樱花 / 夏祭 / 浴衣 / 烟花 星 / 月 / 夜 / 断 / 舍 / 离 琉璃 / 抹茶 / 青叶 / 花筏  如果你的行文包含了日语意象的词汇，可以使和风提升一个档次。\n 樱花庄里绽放的笑颜，完全不落于盛开的樱花。 （摘自『樱花庄的宠物女孩』)  有一些词在日语里都是很绮丽的，可以当作高端用法，不要求掌握。例如：\n 桜吹雪 / 遠花火 / 朧月 / 花信風   从卖萌到精通 ——『和式汉语』简要入门指南 \n—— 樱花庄的宠物女孩\n关于日语词汇，在汉语中越来越常见的用法是保留原有的日语说法而不修正为汉语。\n 修正（修改) / 点数（分数） / 社畜 （职场人士） 童贞 （ ？） / 约束 （约定/捆绑） / 元气（精神）  我们可以称上面为地道的和式用法。\n 我能够掌握和式汉语的奥义而不伤身体。   小细节 终于来到最后一部分了，下面讲一些可以让句子更加和式的小技巧。\n1 .使用繁体字\n请注意日语的汉字是有多种形式的，如我们所说的简体、繁体、异体字，例如 簡単/国產，你可以从参考页面获得更多的信息。\n日本新字体 – 维基百科，自由的百科全书\n2 . 标点符号\n日语中使用読点（、）作为逗号。\n用「 」『 』来替代 ‘ ’ “ ”。\n省略号……用于委婉的语气还有有意或者无意没有说完的话。\n基本没有感叹号。\n 用「 月が绮丽ですね」来替代「I love you」， 夏目漱石用一句话能够拥有的所有暧昧展示着明治时代的文化和情怀。   从卖萌到精通 ——『和式汉语』简要入门指南 \n—— 《约会，恋爱究竟是什么呢？！》 3 . 汉语的完整句子有着很高的容错率，只要句子的主干和主旨没有太大的变动，可能就在不影响理解的前提下给人一种耳目一新的感觉。\n长短句的结合，以及句子本身的韵律感，多看看不限于轻小说的文学类小说吧，教不来的。\n 我们都只是一枚面对体制高墙的脆弱鸡蛋。无论怎么看，我们都毫无胜算。墙实在是太高、太坚硬，也太过冷酷了。战胜它的唯一可能，只来自于我们全心相信每个灵魂都是独一无二的，只来自于我们全心相信灵魂彼此融合，所能产生的温暖。  4 .比起做作地去卖萌，自己本身的萌点也是很重要的，从生活中积累，并挖掘生活的可爱之处。\n萌是一种从内心深处，自然地向外延伸，以感染他人的气氛。\n暂时写到这么多吧，最后祝大家身体健康，好好说话。\n以上。\n感谢阅读，Like \u0026amp; Comment 希望。\n 参考资料与扩展阅读：\n 把《出师表》翻成日语再翻回来 白学 - 萌娘百科 万物皆可萌的百科全书 日语里有哪些很美的词？ – 日本 – 知乎\n  转载自：从卖萌到精通 ——『和式汉语』简要入门指南\n","date":"2017年05月05日","permalink":"/2017/05/21/820.html/","title":"从卖萌到精通 ——『和式汉语』简要入门指南"},{"content":"最近好多博主的头像或图标都是扁平化的MD风格，再看看我的，就一PS抠出来的小人，一点都不上档次，于是就自己啄么着也去弄个MD风格的logo，折腾了很久，在 @PDC 大佬的帮助下完成了这辈子第一个MD风格的图标 😎 教程开始~  扁平式： 首先，找一张小人图片把图扣下来，碧如我这张初音的 😳  如何制作MD风格的图标 \n把中间的小人完整的扣下来，用什么方式扣就看你自己的了，我用的魔棒\n扣完图后把图片先填充成黑色，编辑菜单—定义画笔预设—自己随便取个名字保存即可，等会做长投影要用\n 如何制作MD风格的图标 \n然后把图层填上你喜欢的颜色，我用的白色，尽量选择白色，因为PDC是这么说的 ➡  如何制作MD风格的图标 \n之后新建一个图层，同样填上你喜欢的颜色，可以用任何你喜欢的形状来做，我这里用的圆角矩形（矢量图工具那里画的），之后调整图层顺序，就变成了酱紫\n 如何制作MD风格的图标 \n扁平式，完成~\n 投影试： 然后在小人图层上添加图层效果，勾上投影，自己调节投影角度和大小为合适的效果即可，角度可以根据光源调整，\n 如何制作MD风格的图标 \n投影试，完成~\n 长阴影： 将图层效果上的投影距离调整为0，大小和扩展自己琢么这跳，不要太生硬\n之后给图层打上标尺线，用钢笔工具在正中间相右下角托一条直线路径\n 如何制作MD风格的图标 \n把工具换成画笔，画笔形状选你刚刚保存的画笔预设，然后在画笔窗口调下画笔属性，把画笔间距调成百分之一，勾上平滑，其他不用动\n 如何制作MD风格的图标 \n新建图层，换成路径选择工具，在刚刚的直线路径上右键—描边路径—画笔—确定\n之后会描边出一些长阴影，调整到合适位置后再图层面板调下透明度，不要调颜色，然后图标就做好了 😉  如何制作MD风格的图标 \n长阴影试，完成~\n 渐变式： 复制一层背景图层，移动到最顶层，填充设置为百分之0，然后打上参考线，用选择工具选择一半图层，加上蒙版\n 如何制作MD风格的图标 \n之后在加上图层样式，勾上渐变，混合模式选择正片叠底，其他可以参考我的设置\n 如何制作MD风格的图标 \n然后在原背景图层上加上相同的背景样式，同样添加图层样式，设置渐变叠加，除透明度浅一点外其他和刚才一样\n 如何制作MD风格的图标 \n渐变式，完成~\n 484很简单，然而我为了那个长阴影折腾了半天，最后附上四个成品图标 😉  如何制作MD风格的图标  如何制作MD风格的图标  如何制作MD风格的图标  如何制作MD风格的图标 \n然后感谢 @PDC 提供的帮助，一位MD风格图标的开发者（据说都是用手机画的2333）\n","date":"2017年05月05日","permalink":"/2017/05/04/787.html/","title":"如何制作MD风格的图标"},{"content":"怎样让自己的移动硬盘或者U盘更个性化一点呢？除了精美的外观能让对方眼前一亮，内部图标也一定不能落后\n 首先要准备一张大小适合的图标图片，不能太大，一般128*128就够了，取名为：tubiao.ICO，必须是ico文件，不能是png此类的图片格式文件 把图标丢到硬盘根目录，新建一个文本文件，重命名为 autorun.inf 在文本文件内输入一下内容  1 2 3  [autorun] open=\u0026#34;\u0026#34; autoplay=true ICON=\u0026#34;tubiao.ico\u0026#34;    个性化U盘\u0026amp;硬盘图标 \n看吧，瞬间让你的硬盘变得萌萌哒 😳\n","date":"2017年04月04日","permalink":"/2017/04/19/763.html/","title":"个性化U盘\u0026硬盘图标"},{"content":"SSD请无视本文章，本文只针对于机械硬盘\n身为系统洁癖的我一次清理C盘的记录\n用户默认资料文件位置更改 Windows默认的用户配置文件是在系统盘里，使用一段时间后这个文件可能会达到几十G，使得系统盘的容量大幅减小，拖慢系统运行速度，我们可以把用户文件迁移到其他磁盘，如果你的C盘崩了，直接重装即可。对于我这种每个月都要格式化一次C盘的用户来说，完全不用做什么太大的备份，直接格式化C盘, 在新系统下修改用户文件路径就行了。\n具体步骤：\n使用管理员账户登录Windows\nwin+r键输入 Regedit\n找到 HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\nProfileList下的子项是以SID分类的，一台机子登录的用户应该不多，很快就能找到你想用用户对应哪个地址，修改文件路径即可\n用户文件夹迁移 Windows自带了一些文件夹, 用于默认存放资料, 像: 文档, 音乐, 下载, 图片此类的, 默认在 C 盘, 可以移动其默认位置以节省空间占用, 例如音乐文件夹, 右键–属性–位置–移动, 选择新文件夹即可, 原 C 盘下的文件夹会被删除\n软件默认安装位置修改 Windows默认安装软件的位置在C盘，每次安装软件如果不想装在C盘，又懒得手动选择，不选的话长时间下去C盘容量一样会变小，我有系统洁癖，没办法。而且系统重装以后同样不用再重新安装软件了啊，导入注册表就行，多方便 😎\nwin+r键输入 Regedit\n找到 HKEY_LOCAL_MACHINE—SOFTWARE—Microsoft—Windows—CurrentVersion\n修改其中的ProgramFilesDir值即可\n系统缓存文件位置修改 Windows和某些软件一样，使用一段时间后会产生一些缓存文件，有时候会高达几G，不删看着难受，直接丢到其他盘即可\n计算机——右键——属性——高级菜单——环境变量\n在用户变量里全部自己改吧，默认只有“TEMP”和“TMP”这俩，不过有些软件也会产生新的选项，改到你想要替换的位置即可\n清理磁盘碎片 “磁盘碎片，应该称为文件碎片，是因为文件被分散保存到整个磁盘的不同地方，而不是连续地保存在磁盘连续的簇中形成的。硬盘在使用一段时间后，由于反复写入和删除文件，磁盘中的空闲扇区会分散到整个磁盘中不连续的物理位置上，从而使文件不能存在连续的扇区里。这样，再读写文件时就需要到不同的地方去读取，增加了磁头的来回移动，降低了磁盘的访问速度。”摘自度娘，机械硬盘使用时间长了会产生大量的磁盘碎片，会大大影响磁盘读写速度，还会占用一定的空间，所以定期清理磁盘碎片很重要（好像会自动定期清理，不过我把他关了，清理的优点频繁，一个月清理一次就行。）可以使用Windows自带磁盘清理工具。在磁盘上点击菜单栏管理–优化–优化\n然后，Windows就会自动分析碎片进行整理，不过我推荐使用 Smart Defrag 这款软件，功能更强大，分析的比较干净点，不过是付费的，破解版网上自寻。SSD的话可以跳过这个步骤，原因自行百度。\n删除一些没卵用的系统文件 Windows安装后会产生一些壁纸、主题、各种输入法、帮助文件，虽说占用不大，但是强迫症很难忍受他们的存在啊，一点点删好麻烦的样子，而且还不完全，建议下个360、电脑管家之类的，能扫出一堆没卵用的文件来，如果不喜欢这些软件的话用了就卸还不就行了 😎\n卸载一些自带应用 话说win10自带了好多没卵用的软件，大家可以根据需要自行卸载。\n经常清理垃圾 话说那些xx助手神马的用来清理垃圾、插件、注册表神马的不是再好不过了么，那些广告又不是不能关，我一般都是用完就结束后台的，也没给开机自启权限，那些CCleaner神马的国外大佬级软件对国内很多毒瘤软件都完全没用，也就清理下系统缓存和注册表罢了，所以清理垃圾的话还是推荐国内的某些‘大厂’，清理时还自动包括了系统更新文件，系统缓存等，非常方便。\n我的C盘：\n 如何高效的清理C盘 \n 如何高效的清理C盘 \n","date":"2017年04月04日","permalink":"/2017/04/18/760.html/","title":"如何高效的清理C盘"},{"content":"开玩笑呢，怎么不会修电脑。笔记本变慢了，一把螺丝刀，拆开面板卸下键盘，清理灰尘重涂硅脂，装好开机，so easy。\n什么，是你的笔记本坏了？那我不能帮你修了，对不起。我要是帮你修了，就得承担这么几个后果：1. 如果不小心拆坏了，那么我得赔。2. 算我走运，装好后电脑正常使用没问题，你会只留下一句谢谢，然后觉得是我应该做的。3. 你以后会经常拿你朋友的各种笔记本过来给我修理。4. 你会提出更多要求，直到我做不到。比如，清理垃圾文件或者超频以让系统速度提高十倍。5. 在我无法满足要求的时候，你会留下一句话：“你不是学计算机的吗？”\n如果我不帮你修，而是给你提出一些好的建议。如果笔记本还在保修期，建议你去售后免费维修，你会说，要跑那么远，好麻烦呀，你帮我送去吧。如果笔记本已过保修期，建议你去电脑城找专业人士清理，你会说，哎呀还要花20块钱呀，嗯，我觉得我还是比较信任你的技术，怕电脑城的人给修坏了，还是你修吧。\n“对不起，我不会修”，不过是常年的经验总结后选择的最能避免麻烦的借口。为什么不给你修，只不过是因为你一不是我近亲二不是我密友三不是我领导。\n修电脑军规20条，时刻谨记在心：\n首先记住这句话：永远不要承认自己是高手，因为这个称号是要付出代价的。\n接到陌生电话后，一定要问清楚对方有什么事情，然后再告诉他（她）当前你目前所在的位置。\n永远不要试图通过电话或者QQ解决某个问题，对方很有可能不知道菜单是什么东西，这不能怨他们，只能怨你自己，因为你永远懒于解释给他们听。\n不要想着立马可以解决遇到的问题，因为你所遇到的总是崩溃的系统或者处于崩溃边缘的系统。\n如果对方允许你重新安装系统，那就不要试着去做任何修复工作，因为重装系统是最快解决问题的办法。\n除了询问哪些资料需要备份，你不要提问对方任何问题，除非你的心理承受能力特别强。\n学会保守做人，每次开工前，都记得告诉对方：“我可能无法最终解决问题，还要继续吗？”。\n对电脑的外观检查永远是第一位的，看看线路是否连接正常，看看USB接口是否连接了其他设备等等。\n相信硬件的抗噪能力，尽可能的情况下，不要打开对方的机箱。没有做成医生，反倒被当作破坏者，那是很悲哀的事情。\n做好被别人数落的心理准备，因为不懂电脑知识的人，往往懂得如何评价别人。\n如果人家说他的内存有200G，你千万不要纠正说是硬盘，否则，你的噩运即将来临。\n不知道菜单是什么东西的人，一般也会知道虚拟内存是怎么回事的，按照他的要求去调整就可以了，反正这个不会影响到你完成修理工作。\n告诉对方，你没有任何杀毒软件，否则，您所安装的杀毒软件都是最差的，也是问题最多的。\n别让自己成为处理打印机故障的高手，告诉你，打印机的麻烦事情可比电脑多多了。\n坚决不要帮别人购买电脑，尤其是组装机，除非你想背上吃回扣的骂名，然后每天屁颠屁颠的去帮他们处理故障。\n不要反感以下两句话，它会伴随你很久时间：第一句：“我的电脑又出大问题了。”第二句：“你还是过来帮我看看吧。”\n尽量不要去动别人的电脑，否则，若干天以后，你的这一行动会导致他的系统崩溃并带来埋怨。\n不要去纠正别人的任何错误，除非你有说服别人的超强能力。\n尽可能的前提下不要互相传递任何电子文档，因为你的文件很有可能被指责为病毒。\n不要害怕指责，因为你无法逃避。\n转载自：幻想天空\n","date":"2017年04月04日","permalink":"/2017/04/13/742.html/","title":"【分享】关于程序员会不会修电脑"},{"content":"在树莓派装个小程序装了快一小时都没装上，各种报错，home下多了一堆文件，索性把他们都删除吧。\n当时在home目录下，直接执行了 rm -rf /* 。删了三秒钟以后…恩？ 🙄 怎么这次删的时间有点长？等等， rm -rf /* ??? 😀 妈蛋！不对！不！！！忘记敲目录了！！！！！！ 😮\nCtrl+CCCCCCCCCCCCCCCCCCCCCCCC…………..中\n于是，我默默的看着一行行的rm代码在眼前慢慢刷过~ 😐\n恩，大概十多秒以后删完了，然后终于开始Ctrl+C了，我的内心是绝望的 😥\n 论树莓派rm-rf /*以后 \nls一下吧，恩，什么都看不到 😐 还是连ftp看吧，恩，还能连上\n 论树莓派rm-rf /*以后 \n恩，挺干净的，还是关机吧 😐\n 论树莓派rm-rf /*以后 \n恩，可以，我去拔电源还不行么 😈\n 论树莓派rm-rf /*以后 \n🙄 等等，我的移动硬盘怎么会在上面，\n😥 我存了半年的心血啊！！！\n可以，很强，我去装系统了 :mrgreen:\n","date":"2017年04月04日","permalink":"/2017/04/13/737.html/","title":"论树莓派rm-rf /*以后"},{"content":"用过CNZZ统计服务的都知道，在chrome下控制台会出现一串黄黄的报错，我忍了这个忍了大半年了，今天终于忍不住找了下解决方法\n CNZZ统计报错的解决方法 \n错误原因： 页面渲染完成后使用了document.write()（cnzz统计代码引起的，chrome53以上版本会报错）。\n解决方法（来自CSDN）： 将统计代码改为异步加载\n新统计代码如下：(注意替换 xxx ID为自己的统计站在点ID)\n1 2 3 4 5 6 7 8 9 10  \u0026lt;!-- cnzz stats --\u0026gt; \u0026lt;script type=\u0026#34;text/JavaScript\u0026#34;\u0026gt; var cnzz_s_tag = document.createElement(\u0026#39;script\u0026#39;); cnzz_s_tag.type = \u0026#39;text/javascript\u0026#39;; cnzz_s_tag.async = true; cnzz_s_tag.charset = \u0026#39;utf-8\u0026#39;; cnzz_s_tag.src = \u0026#39;https://w.cnzz.com/c.php?id=\u0026lt;span style=\u0026#34;color: #ff0000;\u0026#34;\u0026gt;XXXXX\u0026lt;/span\u0026gt;\u0026amp;async=1\u0026#39;; var root_s = document.getElementsByTagName(\u0026#39;script\u0026#39;)[0]; root_s.parentNode.insertBefore(cnzz_s_tag, root_s); \u0026lt;/script\u0026gt;    CNZZ统计报错的解决方法 \n484感觉瞬间清爽多了 😎\n","date":"2017年04月04日","permalink":"/2017/04/12/730.html/","title":"CNZZ统计报错的解决方法"},{"content":"七天才到，等的好苦啊，还好不是普通卡，要不然就直接扔了2333\n 哔哩哔哩22卡（信仰）到货 \n 哔哩哔哩22卡（信仰）到货 \n 哔哩哔哩22卡（信仰）到货 \n","date":"2017年04月04日","permalink":"/2017/04/07/703.html/","title":"哔哩哔哩22卡（信仰）到货"},{"content":"今天把Ubuntu默认的用户换成root用户以后发现会出现木有声音的情况，百度了下找了个简单点的解决办法\n执行：pulseaudio --start --log-target=syslog\n接着应该就能听见声音了，如果还是木有，自行百度吧～\n添加开机启动 左上角的齿轮里打开启动应用程序，添加这段命令即可\n Ubuntu 16.04 root用户耳机木有声音的解决办法 \n","date":"2017年03月03日","permalink":"/2017/03/29/656.html/","title":"Ubuntu 16.04 root用户耳机木有声音的解决办法"},{"content":"这是一条定时说说\n啊啊啊，好兴奋阿，又离死亡更进了一步~咳咳，我在说什么呢，总之本仙女祝自己生日快乐啦！★,°:.☆(￣▽￣)/$:.°★ 然后我居然和小樱还有京子同一天生日呢，天呐噜，想想都激动 (:з」∠)  本仙女祝自己生日快乐~ \n 本仙女祝自己生日快乐~ \n 本仙女祝自己生日快乐~ \n  本仙女祝自己生日快乐~ \n 本仙女祝自己生日快乐~ \n 本仙女祝自己生日快乐~ \n","date":"2017年03月03日","permalink":"/2017/03/27/653.html/","title":"本仙女祝自己生日快乐~"},{"content":"今天整理 WordPress 文件夹的时候发现图库里有600多张图片，我一共也就上传过6-70张左右的照片好吧，当时就懵逼了，网上找了一下相关问题的原因，原来是 WordPress 默认会将上传的图片裁剪成多个，不仅占了大的发磁盘空间，而且还拖慢了网站的性能。\n禁用缩略图的方法：\n 在主题模板的 functions.php 里加上  1 2  //彻底禁止WordPress缩略图 add_filter( \u0026#39;add_image_size\u0026#39;, create_function( \u0026#39;\u0026#39;, \u0026#39;return 1;\u0026#39; ) );    打开WordPress上帝模式(/wp-admin/options.php)，Ctrl+F搜索medium_large_size_w ，将其值改为 0\nWordPress 禁用裁剪缩略图的功能  设置—多媒体—将缩略图大小调整为0，关闭 总是裁剪缩略图到这个尺寸（一般情况下，缩略图应保持原始比例） 功能  ","date":"2017年03月03日","permalink":"/2017/03/24/633.html/","title":"WordPress 禁用裁剪缩略图的功能"},{"content":"之前一直使用的MySQL5.6版本的数据库，但后来换成了锐壳云的空间，只支持5.5的，导入数据表的时候一直提示表的结构不对，折腾了一晚上，各个版本的MySQL都试过了，依旧提示同样的错误 😥\n WordPress使用MySQL5.6数据库迁移至5.5提示错误的解决方法 \n后来我用了个脑残点的方法 ❓ ：\n准备两台服务器，安装不同版本的MySQL（5.6和5.5）\n在两台服务器上同时安装WordPress，把两台服务器上的数据表全部导出，做个对比。果然，发现不对的地方了。。。（左：5.5 右：5.6\n WordPress使用MySQL5.6数据库迁移至5.5提示错误的解决方法  WordPress使用MySQL5.6数据库迁移至5.5提示错误的解决方法 \n很明显图中绿色的地方不一致，5.6比5.5多了个520 😈\n把表中的 utf8mb4_unicode_520_ci 批量替换为 utf8mb4_unicode_ci 即可解决所有问题，是的没错，我为了这个折腾了一晚上 ❓\n","date":"2017年03月03日","permalink":"/2017/03/20/405.html/","title":"WordPress使用MySQL5.6数据库迁移至5.5提示错误的解决方法"},{"content":"移动硬盘挂在树莓派上当NAS用，之后不小心突然断电，然后硬盘就炸了，数据全挂。还好东芝移动硬盘三年质保，免费换新，随便找了个理由还真就给我换了。。。\n移动硬盘满血复活 \n移动硬盘满血复活 \n移动硬盘满血复活 \n移动硬盘满血复活 \n","date":"2017年03月03日","permalink":"/2017/03/19/432.html/","title":"移动硬盘满血复活"},{"content":"树莓派由于突然的断电导致引导错误，需要键盘敲命令修复，but家里唯一的usb接口的键盘前天被我弄烂了，只剩下一个ps2的键盘，无奈之下，只能去重新买个键盘了。恩，选了2个小时，锁定了樱桃轴的RK S108，总共花了430多，反正有花呗，随便造作 😛 。\n快递三天到货，真是异常的快呢~  人生第一款机械键盘~ \n包装有点简陋（可能是为了环保吧~  人生第一款机械键盘~ \n霸气~ 😎  人生第一款机械键盘~  人生第一款机械键盘~ \n 人生第一款机械键盘~ \n忘记加上键盘托了~  人生第一款机械键盘~ \n","date":"2017年03月03日","permalink":"/2017/03/07/364.html/","title":"人生第一款机械键盘~"},{"content":" 虽然从来不缺流量，但看在8折Q币的分上。。。.\n 第一张过期了，第二张一天就到手~\n大王卡到手 \n 使用情况 经常没信号，网速什么的还可以，加上免流简直完美~\n","date":"2017年03月03日","permalink":"/2017/03/05/438.html/","title":"大王卡到手"},{"content":"小米圈铁用了一年多了，耳机线已经被我糟蹋的不行了，本来准备咬咬牙分期买个Beats Solo3 Wireless的，但是我木有Apple设备啊啊啊！安卓设备用Solo3就跟街边10块的耳机差不多，其他头戴式耳机都好贵好难看，于是就老老实实选了副实惠点的耳机了.\n 小米圈铁Pro到手 \n小米圈铁Pro到手 \n小米圈铁Pro到手 \n小米圈铁Pro到手 \n和原来的圈铁对比  左：圈铁\n右：Pro\n  小米圈铁Pro到手 \n小米圈铁Pro到手 \n圈铁的线已经被我弄的惨不忍睹了（据说还是什么凯夫拉纤维线材  小米圈铁Pro到手 \n","date":"2017年03月03日","permalink":"/2017/03/03/440.html/","title":"小米圈铁Pro到手"},{"content":"乱凑凑出来的，能达到我想要的目的就行_(:з」∠)_ 前几天看到了一个利用百度语音接口让树莓派定时说天气的功能，所以我就想着，能不能让他定时说出温度，于是就抱着试一试的心态折腾了半天。。。因为我完全不会Python，全是靠百度和谷歌凑出来的，可能脚本有点滑稽，但能达到我想要的目的就行_(:з」∠)_，能够定时说出温度和cpu使用情况，就随便分享一下吧~\n环境  音箱*1 树莓派*1 Python3.4 依赖：Requests  脚本内容 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  import requests import os headers = { \u0026#39;User-Agent\u0026#39;: \u0026#39;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit\u0026#39; \u0026#39;/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safar\u0026#39; \u0026#39;i/537.36\u0026#39;, } def getCPUtemperature(): res = os.popen(\u0026#39;vcgencmd measure_temp\u0026#39;).readline() return(res.replace(\u0026#34;temp=\u0026#34;,\u0026#34;\u0026#34;).replace(\u0026#34;\u0026#39;C\\n\u0026#34;,\u0026#34;\u0026#34;)) def getCPUuse(): return(str(os.popen(\u0026#34;top -n1 | awk \u0026#39;/Cpu\\(s\\):/ {print $2}\u0026#39;\u0026#34;).readline().strip())) CPU_temp = getCPUtemperature() CPU_usage = getCPUuse() text = \u0026#39;树莓派现在的CPU温度为%s度,CPU使用百分之%s\u0026#39; % \\ (CPU_temp, CPU_usage) url = u\u0026#39;http://tts.baidu.com/text2audio?idx=1\u0026amp;tex={0}\u0026amp;cuid=baidu_speech_\u0026#39; \\ u\u0026#39;demo\u0026amp;cod=2\u0026amp;lan=zh\u0026amp;ctp=1\u0026amp;pdt=1\u0026amp;spd=4\u0026amp;per=4\u0026amp;vol=5\u0026amp;pit=5\u0026#39;.format(text) res = requests.get(url, headers=headers) with open(u\u0026#39;1.mp3\u0026#39;, u\u0026#39;wb\u0026#39;) as f: f.write(res.content) def main(): mp3path2 = os.path.join(os.path.dirname(__file__), \u0026#39;2.mp3\u0026#39;) os.system(\u0026#39;mplayer %s\u0026#39; % mp3path2) mp3path1 = os.path.join(os.path.dirname(__file__), \u0026#39;1.mp3\u0026#39;) os.system(\u0026#39;mplayer %s\u0026#39; % mp3path1) if __name__ == \u0026#39;__main__\u0026#39;: main()   定时任务  crontab -e 1 */3 * * * python /root/cpu.py #每三小时报告一次  ","date":"2017年02月02日","permalink":"/2017/02/22/311.html/","title":"让树莓派定时说出温度和CPU使用情况"},{"content":"文章转载自：woodenrobot.me\n很早之前就想用树莓派当闹钟了，尝试过许多方法，比如用谷歌日历，PHP脚本等，但最后尝试下来效果都不是很满意。今天在知乎上看到了一篇用python脚本当闹钟的方法，尝试了一下，霸气的不要不要的，自带天气播放功能~所以就顺便写个教程吧\n准备  树莓派*1 音箱*1  环境  Python3.4  安装依赖  #树莓派自带的交易版本是2.7的，所以到最后不能正常运行，我在这里折腾了很久。。。首先把py的版本改成3.4~\nsudo ln -s /usr/bin/python3.4 /usr/bin/python #把系统默认python命令改成python3 #从 https://pypi.python.org/pypi/pip#downloads 下载最新版本的pip\n#把刚刚下载的文件上传后解压\ntar -xzvf pip-9.0.1.tar.gz\n#进入安装目录\ncd pip-9.0.1\n#进行安装\npython setup.py install #安装Beautiful Soup4\n#可通过系统的软件包管理来安装\napt-get install Python-bs4\n#也可以用easy_install安装\neasy_install beautifulsoup4\n#也可以用pip进行安装（推荐）\npip install beautifulsoup4 #安装Requests\n#通过pip安装（推荐）\npip install requests\n#也可以通过git库安装\ngit clone git://github.com/kennethreitz/requests.git\ncd requests\npython setup.py install  获取所在位置天气 这里选择墨迹天气获取实时天气信息，地址：\nhttp://tianqi.moji.com/ 进入墨迹天气的页面，墨迹天气会根据你的ip加载相应地区的天气。\n 用树莓派打造你的私人闹钟~ \n进入墨迹天气的页面，墨迹天气会根据你的ip加载相应地区的天气。 这次我们主要抓取温度、天气、湿度、风力、空气质量和天气提示这几个数据。\n这种小爬虫我们就不用Scrap那种重型武器啦，使用requests和BeautifulSoup这两个超级好用的库可以快速实现。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  import re import requests from datetime import datetime from bs4 import BeautifulSoup headers = { \u0026#39;User-Agent\u0026#39;: \u0026#39;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit\u0026#39; \u0026#39;/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safar\u0026#39; \u0026#39;i/537.36\u0026#39;, } res2 = requests.get(\u0026#39;http://tianqi.moji.com/\u0026#39;, headers=headers) soup = BeautifulSoup(res2.text, \u0026#34;html.parser\u0026#34;) temp = soup.find(\u0026#39;div\u0026#39;, attrs={\u0026#39;class\u0026#39;: \u0026#39;wea_weather clearfix\u0026#39;}).em.getText() weather = soup.find(\u0026#39;div\u0026#39;, attrs={\u0026#39;class\u0026#39;: \u0026#39;wea_weather clearfix\u0026#39;}).b.getText() sd = soup.find(\u0026#39;div\u0026#39;, attrs={\u0026#39;class\u0026#39;: \u0026#39;wea_about clearfix\u0026#39;}).span.getText() sd_num = re.search(r\u0026#39;\\d+\u0026#39;, sd).group() sd = sd.replace(sd_num, sd_num_zh) wind = soup.find(\u0026#39;div\u0026#39;, attrs={\u0026#39;class\u0026#39;: \u0026#39;wea_about clearfix\u0026#39;}).em.getText() aqi = soup.find(\u0026#39;div\u0026#39;, attrs={\u0026#39;class\u0026#39;: \u0026#39;wea_alert clearfix\u0026#39;}).em.getText() aqi_num = re.search(r\u0026#39;\\d+\u0026#39;, aqi).group() aqi = aqi.replace(aqi_num, aqi_num_zh) info = soup.find(\u0026#39;div\u0026#39;, attrs={\u0026#39;class\u0026#39;: \u0026#39;wea_tips clearfix\u0026#39;}).em.getText() sd = sd.replace(\u0026#39; \u0026#39;, \u0026#39;百分之\u0026#39;).replace(\u0026#39;%\u0026#39;, \u0026#39;\u0026#39;) aqi = \u0026#39;aqi\u0026#39; + aqi today = datetime.now().date().strftime(\u0026#39;%Y年%m月%d日\u0026#39;) text = \u0026#39;早上好！今天是%s,天气%s,温度%s摄氏度,%s,%s,%s,%s\u0026#39; % \\ (today, weather, temp, sd, wind, aqi, info)   文字转语音 使用百度的文字转换语音API，地址：百度语音-永久免费智能语音开放平台 还可以选各种声音，调节语速。虽然它没有给出直接的api接口，但是我们利用Chrome浏览器的开发者模式可以找到api。 打开开发者模式，点击播放的按钮，在network里就可以找到刚刚发出的请求。\n 用树莓派打造你的私人闹钟~ \n其中 http://tts.baidu.com/text2audio?idx=1\u0026tex=1\u0026cuid=baidu_speech_demo\u0026cod=2\u0026lan=zh\u0026ctp=1\u0026pdt=1\u0026spd=5\u0026per=4\u0026vol=5\u0026pit=5 就是我们要找的百度文字转语音API,其中per是参数是语音的类型，spd是语速，vol是音量，而tex则是需要转换的文字。通过以下代码就可以实现将特定的文字转换为语音，并以mp3格式保存到本地。\n1 2 3 4 5 6 7 8 9 10 11 12 13  import requests headers = { \u0026#39;User-Agent\u0026#39;: \u0026#39;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit\u0026#39; \u0026#39;/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safar\u0026#39; \u0026#39;i/537.36\u0026#39;, } url = \u0026#39;http://tts.baidu.com/text2audio?idx=1\u0026amp;tex={0}\u0026amp;cuid=baidu_speech_\u0026#39; \\ \u0026#39;demo\u0026amp;cod=2\u0026amp;lan=zh\u0026amp;ctp=1\u0026amp;pdt=1\u0026amp;spd=4\u0026amp;per=4\u0026amp;vol=5\u0026amp;pit=5\u0026#39;.format(text) res = requests.get(url, headers=headers) with open(\u0026#39;1.mp3\u0026#39;, \u0026#39;wb\u0026#39;) as f: f.write(res.content)   实现定时播放语音 使用mplayer实现语音播放,通过以下命令安装mplayer:\nsudo apt-get install mplayer\n用法很简单输入以下命令即可播放音乐：\nmplayer \\xxx\\xxx\\xxx.mp3(绝对地址)\n本来是用crontab来实现定时播放的，但是后来发现了一个bug。程序运行的流程是实时下载语音MP3文件到本地，然后用os.system()直接调用mplayer播放语音。程序本地运行时正常，用crontab定时运行就找不到实时下载的语音文件。没有办法就自己写了一个每天定时播放的脚本。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  import time from datetime import datetime def get_seconds(h=\u0026#39;07\u0026#39;, m=\u0026#39;30\u0026#39;, s=\u0026#39;00\u0026#39;): \u0026#34;\u0026#34;\u0026#34;获取当前时间与程序启动时间间隔秒数\u0026#34;\u0026#34;\u0026#34; # 设置程序启动的时分秒 time_pre = \u0026#39;%s:%s:%s\u0026#39; % (h, m, s) # 获取当前时间 time1 = datetime.now() # 获取程序今天启动的时间的字符串格式 time2 = time1.date().strftime(\u0026#39;%Y-%m-%d\u0026#39;) + \u0026#39; \u0026#39; + time_pre # 转换为datetime格式 time2 = datetime.strptime(time2, \u0026#39;%Y-%m-%d%H:%M:%S\u0026#39;) # 判断当前时间是否晚于程序今天启动时间，若晚于则程序启动时间增加一天 if time1 \u0026gt; time2: time2 = time2 + timedelta(days=1) return time.mktime(time2.timetuple()) - time.mktime(time1.timetuple())   该函数默认计算当前事件距上午七点半间隔秒数，需要修改天气播报事件就自己修改三个默认参数，h是小时，m是分钟，s是秒。\n完整脚本 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136  # -*- coding: utf-8 -*- # @Time : 2017/1/15 15:16 # @Author : woodenrobot import os import re import time import requests from datetime import datetime, timedelta from bs4 import BeautifulSoup headers = { \u0026#39;User-Agent\u0026#39;: \u0026#39;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit\u0026#39; \u0026#39;/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safar\u0026#39; \u0026#39;i/537.36\u0026#39;, } def numtozh(num): num_dict = {1: \u0026#39;一\u0026#39;, 2: \u0026#39;二\u0026#39;, 3: \u0026#39;三\u0026#39;, 4: \u0026#39;四\u0026#39;, 5: \u0026#39;五\u0026#39;, 6: \u0026#39;六\u0026#39;, 7: \u0026#39;七\u0026#39;, 8: \u0026#39;八\u0026#39;, 9: \u0026#39;九\u0026#39;, 0: \u0026#39;零\u0026#39;} num = int(num) if 100 \u0026lt;= num \u0026lt; 1000: b_num = num // 100 s_num = (num-b_num*100) // 10 g_num = (num-b_num*100) % 10 if g_num == 0 and s_num == 0: num = \u0026#39;%s百\u0026#39; % (num_dict[b_num]) elif s_num == 0: num = \u0026#39;%s百%s%s\u0026#39; % (num_dict[b_num], num_dict.get(s_num, \u0026#39;\u0026#39;), num_dict.get(g_num, \u0026#39;\u0026#39;)) elif g_num == 0: num = \u0026#39;%s百%s十\u0026#39; % (num_dict[b_num], num_dict.get(s_num, \u0026#39;\u0026#39;)) else: num = \u0026#39;%s百%s十%s\u0026#39; % (num_dict[b_num], num_dict.get(s_num, \u0026#39;\u0026#39;), num_dict.get(g_num, \u0026#39;\u0026#39;)) elif 10 \u0026lt;= num \u0026lt; 100: s_num = num // 10 g_num = (num-s_num*10) % 10 if g_num == 0: g_num = \u0026#39;\u0026#39; num = \u0026#39;%s十%s\u0026#39; % (num_dict[s_num], num_dict.get(g_num, \u0026#39;\u0026#39;)) elif 0 \u0026lt;= num \u0026lt; 10: g_num = num num = \u0026#39;%s\u0026#39; % (num_dict[g_num]) elif -10 \u0026lt; num \u0026lt; 0: g_num = -num num = \u0026#39;零下%s\u0026#39; % (num_dict[g_num]) elif -100 \u0026lt; num \u0026lt;= -10: num = -num s_num = num // 10 g_num = (num-s_num*10) % 10 if g_num == 0: g_num = \u0026#39;\u0026#39; num = \u0026#39;零下%s十%s\u0026#39; % (num_dict[s_num], num_dict.get(g_num, \u0026#39;\u0026#39;)) return num def get_seconds(h=\u0026#39;07\u0026#39;, m=\u0026#39;30\u0026#39;, s=\u0026#39;00\u0026#39;): \u0026#34;\u0026#34;\u0026#34;获取当前时间与程序启动时间间隔秒数\u0026#34;\u0026#34;\u0026#34; # 设置程序启动的时分秒 time_pre = \u0026#39;%s:%s:%s\u0026#39; % (h, m, s) # 获取当前时间 time1 = datetime.now() # 获取程序今天启动的时间的字符串格式 time2 = time1.date().strftime(\u0026#39;%Y-%m-%d\u0026#39;) + \u0026#39; \u0026#39; + time_pre # 转换为datetime格式 time2 = datetime.strptime(time2, \u0026#39;%Y-%m-%d%H:%M:%S\u0026#39;) # 判断当前时间是否晚于程序今天启动时间，若晚于则程序启动时间增加一天 if time1 \u0026gt; time2: time2 = time2 + timedelta(days=1) return time.mktime(time2.timetuple()) - time.mktime(time1.timetuple()) def get_weather(): # 下载墨迹天气主页源码 res = requests.get(\u0026#39;http://tianqi.moji.com/\u0026#39;, headers=headers) # 用BeautifulSoup获取所需信息 soup = BeautifulSoup(res.text, \u0026#34;html.parser\u0026#34;) temp = soup.find(\u0026#39;div\u0026#39;, attrs={\u0026#39;class\u0026#39;: \u0026#39;wea_weather clearfix\u0026#39;}).em.getText() temp = numtozh(int(temp)) weather = soup.find(\u0026#39;div\u0026#39;, attrs={\u0026#39;class\u0026#39;: \u0026#39;wea_weather clearfix\u0026#39;}).b.getText() sd = soup.find(\u0026#39;div\u0026#39;, attrs={\u0026#39;class\u0026#39;: \u0026#39;wea_about clearfix\u0026#39;}).span.getText() sd_num = re.search(r\u0026#39;\\d+\u0026#39;, sd).group() sd_num_zh = numtozh(int(sd_num)) sd = sd.replace(sd_num, sd_num_zh) wind = soup.find(\u0026#39;div\u0026#39;, attrs={\u0026#39;class\u0026#39;: \u0026#39;wea_about clearfix\u0026#39;}).em.getText() aqi = soup.find(\u0026#39;div\u0026#39;, attrs={\u0026#39;class\u0026#39;: \u0026#39;wea_alert clearfix\u0026#39;}).em.getText() aqi_num = re.search(r\u0026#39;\\d+\u0026#39;, aqi).group() aqi_num_zh = numtozh(int(aqi_num)) aqi = aqi.replace(aqi_num, aqi_num_zh).replace(\u0026#39; \u0026#39;, \u0026#39;,空气质量\u0026#39;) info = soup.find(\u0026#39;div\u0026#39;, attrs={\u0026#39;class\u0026#39;: \u0026#39;wea_tips clearfix\u0026#39;}).em.getText() sd = sd.replace(\u0026#39; \u0026#39;, \u0026#39;百分之\u0026#39;).replace(\u0026#39;%\u0026#39;, \u0026#39;\u0026#39;) aqi = \u0026#39;aqi\u0026#39; + aqi info = info.replace(\u0026#39;，\u0026#39;, \u0026#39;,\u0026#39;) # 获取今天的日期 today = datetime.now().date().strftime(\u0026#39;%Y年%m月%d日\u0026#39;) # 将获取的信息拼接成一句话 text = \u0026#39;早上好！今天是%s,天气%s,温度%s摄氏度,%s,%s,%s,%s\u0026#39; % \\ (today, weather, temp, sd, wind, aqi, info) return text def text2voice(text): url = \u0026#39;http://tts.baidu.com/text2audio?idx=1\u0026amp;tex={0}\u0026amp;cuid=baidu_speech_\u0026#39; \\ \u0026#39;demo\u0026amp;cod=2\u0026amp;lan=zh\u0026amp;ctp=1\u0026amp;pdt=1\u0026amp;spd=4\u0026amp;per=4\u0026amp;vol=5\u0026amp;pit=5\u0026#39;.format(text) # 下载转换后的mp3格式语音 res = requests.get(url, headers=headers) # 将MP3存入本地 with open(\u0026#39;1.mp3\u0026#39;, \u0026#39;wb\u0026#39;) as f: f.write(res.content) def main(): while True: s = get_seconds() time.sleep(s) # 获取需要转换语音的文字 text = get_weather() print(text) # 将文字转换为语音并存入程序所在文件夹 text2voice(text) # 获取音乐文件绝对地址 mp3path2 = os.path.join(os.path.dirname(__file__), \u0026#39;2.mp3\u0026#39;) # 先播放一首音乐做闹钟 os.system(\u0026#39;mplayer %s\u0026#39; % mp3path2) # 播报语音天气 mp3path1 = os.path.join(os.path.dirname(__file__), \u0026#39;1.mp3\u0026#39;) os.system(\u0026#39;mplayer %s\u0026#39; % mp3path1) os.remove(mp3path1) if __name__ == \u0026#39;__main__\u0026#39;: main()   最后就尽情的享受你的专属闹钟吧~ 文章转载自：woodenrobot\n","date":"2017年02月02日","permalink":"/2017/02/22/301.html/","title":"用树莓派打造你的私人闹钟~"},{"content":"前几天用树莓派搭建了个私有云盘，感觉利用的还不到位，所以准备用来当个下载机。一开始准备用JDownloader来做的，但是弄好之后发现。。。有点难看，对！就是因为有点难看，所以就不也了。之后无意中看到了Aria2这个神奇的东西，加上yaaw之类的web控制系统用着非常方便，支持bt和迅雷离线下载（需要会员），加上Chrome的插件可以支持下载百度云的文件，简直棒棒哒~\n挂载硬盘 我的硬盘是gpt分区的，ntfs格式，3TB东芝硬盘，默认挂载NTFS格式的硬盘只有只读权限，需要借助其它工具实现，所以不能直接挂载。\n 格式支持。\napt-get install ntfs-3g\napt-get install exfat-nofuse #新建一个挂载点\nmkdir /mnt/nas\nnano /etc/fstab #在最后一行加入\n/dev/sda4 /mnt/nas ntfs-3g defaults,noexec,umask=0000 0 0 #/dev/sda1是我的移动硬盘分区，大家要根据自己的情况来定，否则会导致无法开机，可以通过fdisk -l查看 #然后重启\nreboot fdisk -l\n查看是否挂载成功，如果成功，会显示和下面类似的信息 利用树莓派搭建24h下载机   安装和配置Aria2  安装\nsudo apt-get install aria2 apache2 sudo visudo\n# 在底部增加这一行\nwww-data ALL=(ALL) NOPASSWD: ALL mkdir ~/.aria2\ntouch ~/.aria2/aria2.session\nnano ~/.aria2/aria2.conf 在 aria2.conf 写这些\n# 下载默认的目录\ndir=/mnt/nas/aria2\ndisable-ipv6=true\nenable-rpc=true\nrpc-allow-origin-all=true\nrpc-listen-all=true\n#rpc-listen-port=6800\ncontinue=true\n#刚才touch命令的那个文件，路径要绝对路径\ninput-file=/root/.aria2/aria2.session\n#同上，这个文件的作用是保存你的下载列表，不保存的话重启后所有下载都木有了\nsave-session=/root/.aria2/aria2.session\nmax-concurrent-downloads=3 之后运行\naria2c –conf-path=/root/.aria2/aria2.conf\n没有错误就可以退出了。 把aria2做成系统的服务：\nsudo nano /etc/init.d/aria2c\n添加以下内容\n#!/bin/sh\n### BEGIN INIT INFO\n# Provides: aria2\n# Required-Start: $remote_fs $network\n# Required-Stop: $remote_fs $network\n# Default-Start: 2 3 4 5\n# Default-Stop: 0 1 6\n# Short-Description: Aria2 Downloader\n### END INIT INFO\ncase \u0026quot;$1\u0026quot; in\nstart)\necho -n \u0026quot;Starting aria2c\u0026quot;\nsudo -u root aria2c --conf-path=/root/.aria2/aria2.conf -D\n#sudo -u后面的是你正在使用的用户名\n;;\nstop)\necho -n \u0026quot;Shutting down aria2c \u0026quot;\nkillall aria2c\n;;\nrestart)\nkillall aria2c\nsudo -u root aria2c --conf-path=/root/.aria2/aria2.conf -D\n#同上面的一样，根据自己的用户名改。\n;;\nesac\nexit 设置文件权限\nsudo chmod 777 /etc/init.d/aria2c 测试服务是否可以启动：\nsudo service aria2c start 添加aria2c服务自动运行：\nsudo update-rc.d aria2c defaults  配置web端控制Aria2下载  安装Apache\nsudo apt-get install apache2 下载webui-aria2（当然yaaw也可以，不过没webui-aria2强大）\ncd /var/www/html\ngit clone https://github.com/ghostry/webui-aria2.git\u0026lt;br /\u0026gt; 这个是汉化好的，喜欢英文版的用这个https://github.com/ziahamza/webui-aria2 全部配置好后打开http://ip/webui-aria2即可看到控制页面  利用Chrome插件下载百度云文件  下载插件（一个名为chrome.crx的文件）\n[download]https://github.com/acgotaku/BaiduExporter/blob/master/chrome.crx[/download] 把刚刚下载的chrome.crx文件后缀名改为zip格式，然后解压出来 安装插件\n在浏览器地址栏输入\nchrome://extensions/ 点击左上角的加载已解压的扩展程序，选择你刚刚解压出来的目录进行安装 之后打开百度云，选择要下载的文件，会出现导出下载的按钮，点击后会出现aria的下载信息 利用树莓派搭建24h下载机  之后返回aria的管理页面，点击左上角的添加-使用链接 在配置页面中第一块填文件下载链接，header里填下载信息里的Cookie内容，否则无法下载，其他内容可填可不填，之后便可开始下载   利用树莓派搭建24h下载机 \n 利用树莓派搭建24h下载机 \n","date":"2017年02月02日","permalink":"/2017/02/18/285.html/","title":"利用树莓派搭建24h下载机"},{"content":"今天准备给我的小pi挂载下硬盘，重启，然后~然后就连不上了:cry:，折腾半天都没弄好。刚好显示器又不在身边，也没检查是否真的坏了，然后就爽快的格式化了sd卡，直接重装系统，玩了三个多月的数据全不在了，于是全部重新折腾了一遍，并记录下了这次过程~可能是最全的树莓派折腾过程吧~\n系统安装 需要下载的东西\n 下载sd卡格式化工具：SDFormatter\n下载镜像写入工具：Win32 DiskImager\n下载系统镜像（推荐使用Raspbian）：官方下载\n  首先打开SDFormatter，开始格式化sd卡\n将内存卡用读卡器连接电脑，运行sdformatter.在设置里，将调整逻辑大小选择为：ON 打开Win32DiskImager，选择你下载的镜像（img格式的，官网下载的一定要解压！）\n然后device那选择内存卡盘符，别选错了，点击write写入，等待写入完即可  安装更换软件源 由于树莓派默认的软件源在国外，所以安装软件的速度十分的慢，有时候安装个几m的东西要花上一天，所以我们把软件源更换为国内的可以大大提升速度，相关软件源可以参考树莓派实验室的这篇文章。\n 把内存卡插到pi里，此时ssh可能连不上，因为据说16年11月以后发布的系统默认关闭了ssh。先连接上显示器，等待系统完全启动，点击桌面左上角那个黑黑的东西，进入命令窗口 编辑/etc/apt/sources.list 文件，参考如下命令：\nsudo nano /etc/apt/sources.list 删除或注释原文件所有内容，用以下内容取代：\ndeb http://mirror.sysu.edu.cn/raspbian/raspbian/ jessie main contrib non-free\ndeb-src http://mirror.sysu.edu.cn/raspbian/raspbian/ jessie main contrib non-free  除了Raspbian的软件源外，树莓派还有一份专门的软件源，配置文件位于/etc/apt/sources.list.d/raspi.list。这个软件源的镜像要少一些。\n 直接编辑配置文件\nsudo nano /etc/apt/sources.list.d/raspi.list 比如使用中国科技大学的软件源，就可以修改成：\ndeb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian/ jessie main\n#deb-src http://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian/ jessie main\u0026lt;br /\u0026gt; Ctrl + O 快捷键 保存\u0026lt;br /\u0026gt; Ctrl + x 快捷键 退出 Nano 编辑器 更新软件源列表，同时检查您的编辑是否正确。\nsudo apt-get update  安装中文语言包 因为我英语不是很好，每次看英语大脑总要延迟那么一两秒，所以还是老老实实选择中文吧\n 安装文泉驿的开源中文字体\nsudo apt-get install ttf-wqy-zenhei 如果你经常使用桌面环境的话可以安装中文输入法（Ctrl+空格切换）\nsudo apt-get install scim-pinyin 接着运行：\nsudo raspi-config\n然后选择Internationalisation Options change_locale，在Default locale for the system environment:中去掉en_GB.UTF-8 UTF-8，勾上：“en_US.UTF-8 UTF-8”、“zh_CN.UTF-8 UTF-8”、“zh_CN.GBK GBK” （操作提示：按空格键在前面打勾或去掉勾（星号=勾），PageUp PageDown快速翻页，Tab键跳到OK按钮上），下一屏幕默认语言选zh_CN.UTF-8。 然后重启机器\nreboot  开启root账户并启用ssh登陆  重新开启root账号（系统会提示输入两遍的root密码，输入你想设的密码即可）\nsudo passwd root 修改ssh配置文件\nsudo nano /etc/ssh/sshd_config\nCtrl + W 快捷键 搜索 PermitRootLogin without-password\n修改 PermitRootLogin without-password 为 PermitRootLogin yes\nCtrl + O 快捷键 保存\nCtrl + x 快捷键 退出 Nano 编辑器 在/boot目录下新建一个ssh文件\ncd /boot\nsudo touch ssh\n这样，树莓派开机时默认启动ssh。 启用 root 账号登录\nsudo passwd --unlock root 重启树莓派\nreboot  关闭图形界面  如果只是使用命令行操作的可以关闭图形界面，可以节省大量资源 sudo raspi-config\n依次选择\nBoot Options\nB1 Desktop / CLI\nB1 Console\n之后会让你输密码，确认后重启即可默认进入命令行界面  开启 WiFi 连接  nano /etc/wpa_supplicant/wpa_supplicant.conf 添加 添加 network={ssid=\u0026quot;WIFINAME\u0026quot;psk=\u0026quot;password\u0026quot;} 保存后重启树莓派  ","date":"2017年02月02日","permalink":"/2017/02/16/279.html/","title":"树莓派从零开始整理环境"},{"content":"最近收拾东西的时候偶然间发现了去年买的树莓派3b+，当初是准备用来搭建博客用的，但是稳定性实在不咋地，天天崩。于是就一直放在哪了，今天刚好翻出来，准备用来搭建个私有云盘，彻底摆脱第三方云存储服务\n个人云盘的项目有很多，比如seafile、迷你云、ownCloud等等。大家可以参考知乎的这篇文章进行选择。我准备搭建的是seafile，因为他的中文论坛比较强大，很多问题都能在上面找到答案，官方文档说明也很详细，不需要太多的知识均能看懂，重要的是对树莓派的支持很好\n准备工具  树莓派*1\n公网ip*1\n内存卡or移动硬盘\n 开始搭建  下载seafile安装包：GitHub 安装依赖包：\nsudo apt-get install python2.7 python-setuptools python-imaging python-ldap sqlite3 python-urllib3 将安装包上传到pi中并解压缩\ntar -xvf seafile-server_6.0.7_stable_pi.tar.gz 进入seafile文件夹\ncd seafile-server-6.0.7 运行安装程序\n./setup-seafile.sh\n这里根据提示依次输入服务器名字，服务器IP/域名，数据目录，端口号。 回车后开始设置设置seahub，端口可以自己修改，默认8082\n./seafile.sh start 启动seahub：\n./seahub.sh start 8000 第一次启动会要求输入管理员账号密码和邮箱，输入完成后即可启动，打开http://ip或者域名:8000即可看到登陆页面 至此-安装完成   用树莓派搭建私有云盘 \n上传的速度还是不错的，可能是内网的缘故吧~\n 用树莓派搭建私有云盘 \n家里的带宽是10m专线，阿里云测试三个节点下载速度均为1.5m/s左右，速度还不错，比某云的bt下载速度快多了，我这里是用的内存卡做测试，大家也可以挂载移动硬盘当存储设备哦~\n使用体验 使用了一天的seafile总体感觉很棒，速度达到了最高标准，支持外链分享，密码分享，创建群组，加密资料等，完全可以和某云有的一拼，不出意外的话数据应该不会丢失。并且seafile拥有各个平台的客户端，包括Linux和Mac等，随时随地备份你的资料，和家人一起共享照片等，非常不错，大家如果有树莓派之类的设备可以一试哦~vps的话不建议使用，虽然速度很快，但是存储空间小，如何文件多的话很快就占满了，不如自己用移动硬盘。\n","date":"2017年02月02日","permalink":"/2017/02/15/273.html/","title":"用树莓派搭建私有云盘"},{"content":" 今天在某群内看到了有人发这个软件的介绍，然后看了下使用视频，感觉真的好霸气，可怕的是这款软件在2015年就出了，然而我到现在才知道_(:з」∠)_\n SAO Utils是一款由热风CG工作室开发的“SAO风格启动菜单”，高度还原了动漫刀剑神域中的操作方式。不过目前软件尚处于测试阶段。\n软件总体使用下来感觉还不错，cpu、内存神马的占用也不是很高，感觉和雨滴相似，支持桌面挂件。听说雨滴和su+Wallpaper Engine更配哦。这软件还支持VR！支持VR！！支持VR！！！\n 视频介绍：http://www.bilibili.com/video/av2774939/\n软件介绍地址：http://www.gpbeta.com/post/develop/sao-utils/\n 根据发布的下载地址下载以后安装完是酱紫的（ ( *￣▽￣)发现壁纸好像有点不配诶）  神级桌面美化软件——SAO Utils \n 之后会让你输入用户名，弹出一个对话框，应该是在线使用者的互动吧。反正我弄了半天才关掉那个对话框。。。 关闭聊天窗口的三种方法：(首选项在任务栏，右键十字架)\n ①首选项→插件→桌面网页挂件→禁用 ②在聊天窗口右键→显示挂件菜单→点加号（出来一个黄色的圈，这是网页挂件的初始图标）→再次在聊天窗口右键显示挂件菜单→点减号 ③下拉菜单→设置→[Dption]→插件→桌面网页→右键禁用、   神级桌面美化软件——SAO Utils \n桌面上还有个邮件收发的东西，也不错，支持收发邮件，大家可以去试试  神级桌面美化软件——SAO Utils \n最让我激动的是这软件里的浏览器，加上VR效果简直了~。预览图如下，你们自己感受_(:з」∠)_  神级桌面美化软件——SAO Utils \n 神级桌面美化软件——SAO Utils \n还有实时追番功能  神级桌面美化软件——SAO Utils \n 神级桌面美化软件——SAO Utils \n启动菜单也支持更换主题（SAO看烦了可以换成GGO，也有很多第三方主题~）  神级桌面美化软件——SAO Utils \n内存和CPU的占用也不是很高，不像别人说的那样会很卡，只要不是上世纪的电脑都能正常使用，毫无卡顿  神级桌面美化软件——SAO Utils  神级桌面美化软件——SAO Utils \n其他功能就不介绍了，你们自己去下载体会吧，总体感觉很酷炫，而且支持插件和自定义~  下载地址： http://www.gpbeta.com/post/develop/sao-utils/\n","date":"2017年02月02日","permalink":"/2017/02/08/183.html/","title":"神级桌面美化软件——SAO Utils"},{"content":"今天在折腾树莓派时不小心把树莓派弄死机了，VNC一直卡着，狂输命令也没用，只好强制拔电源重启，可如果以后经常死机，每次都强行拔电源，别说树莓派了，连电脑都受不了啊，于是抱着试一试的心态谷歌了下相关内容，原来，的CPU是保护有硬件看门狗的,可以通过安装模块和值守程序来实现看门狗,防止树莓派死机，每次内存或cpu跑满时会自动重启，虽说不能防止死机，但总比直接拔电源重启好点。。。\n 设备：树莓派3B+\n系统：Debian\n安装看门狗:\n1.加载看门狗模块,编辑/etc/modules文件,添加一行”bcm2708_wdog”\n1 2  sudo modprobe bcm2708_wdog sudo nano /etc/modules    在树莓派上安装使用硬件看门狗防止树莓派死机 \n2.安装系统配置软件和看门狗程序\n1 2  sudo apt-get install chkconfig sudo apt-get install watchdog    在树莓派上安装使用硬件看门狗防止树莓派死机 \n3.配置看门狗程序，编辑“/etc/watchdog.conf”文件\n1  sudo nano /etc/watchdog.conf   去掉 watchdog-device = /dev/watchdog 前的#号，让看门狗设备对应树莓派的硬件看门狗\n 在树莓派上安装使用硬件看门狗防止树莓派死机 \n去掉 max-load-1 = 24 前的#号，当1分钟load进程超过24个的时候（一般5个就是超高负载了，再高可以认为是死机，这在遭遇DDOS攻击的时候很容易遇到）就会触发重启\n 在树莓派上安装使用硬件看门狗防止树莓派死机 \n还可以设置高温复位： 去掉\n1 2  temperature-device = max-temperature = 120   前的#号，改为\n1 2  temperature-device = /sys/class/thermal/thermal_zone0/temp max-temperature = 80000   温度超过80度就会引起重启，保护CPU\n 在树莓派上安装使用硬件看门狗防止树莓派死机 \n配置完后，保存（Ctrl+O），退出（ctrl+x）\n4.配置看门狗程序，开机自动运行\n1  chkconfig watchdog on   5.启动看门狗\n1  sudo /etc/init.d/watchdog start   到这里就配置完成看门狗了，大家可以试试输入下面的符号，这个符号可以引起树莓派死机，如果看门狗正常的话，等一会就能复位了\n1  :(){:|:\u0026amp;};:   详情请参考原文：http://pi.gadgetoid.com/article/who-watches-the-watcher\n","date":"2017年01月01日","permalink":"/2017/01/19/47.html/","title":"在树莓派上安装使用硬件看门狗防止树莓派死机"}]